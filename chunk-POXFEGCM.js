import{a as c}from"./chunk-6ZF2MYIV.js";import{a as p}from"./chunk-3HMEED4I.js";import"./chunk-4AR3QSCQ.js";import"./chunk-N5D4LKLG.js";import"./chunk-CGCU2SFX.js";import"./chunk-TDHOL7D5.js";import"./chunk-GTVNFQLK.js";import{Lb as s,Va as n,Xa as l,ha as d,jb as i}from"./chunk-PQ76J5IX.js";var g=(()=>{class t{constructor(){this.item={cols:1,urls:{"en-US":"schematics/docs/add.en-US.md","zh-CN":"schematics/docs/add.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="Overview"><a class="lake-link"><i data-anchor="Overview"></i></a>Overview</h2><pre class="hljs language-bash"><code>ng add ng-alain
# If you want to create an English version, then:
ng add ng-alain --defaultLanguage=en</code></pre><h2 id="Options"><a class="lake-link"><i data-anchor="Options"></i></a>Options</h2><table><thead><tr><th>Name</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--form</code></td><td><code>true</code></td><td>Whether include dynamic form</td></tr><tr><td><code>--mock</code></td><td><code>true</code></td><td>Whether include mock</td></tr><tr><td><code>--defaultLanguage</code></td><td><code>zh</code></td><td>Default language, <a href="/cli/plugin/en#Supported-language-list" data-url="/cli/plugin/en#Supported-language-list">Supported language list</a></td></tr><tr><td><code>--codeStyle</code></td><td><code>false</code></td><td>Whether include code style</td></tr><tr><td><code>--i18n</code></td><td><code>false</code></td><td>Whether include i18n</td></tr></tbody></table><p>For example, generate a project with i18n:</p><pre class="hljs language-bash"><code>ng add ng-alain --i18n --defaultLanguage=en</code></pre><p>See more <a href="/cli/plugin" data-url="/cli/plugin">plugins</a>.</p></section>`,meta:{order:10,title:"ng add",subtitle:"Create scaffold",type:"Documents"},toc:[{id:"Overview",title:"Overview",h:2},{id:"Options",title:"Options",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="\u547D\u4EE4\u683C\u5F0F"><a class="lake-link"><i data-anchor="\u547D\u4EE4\u683C\u5F0F"></i></a>\u547D\u4EE4\u683C\u5F0F</h2><pre class="hljs language-bash"><code>ng add ng-alain
# \u5982\u679C\u4F60\u60F3\u521B\u5EFA\u4E00\u4E2A\u82F1\u6587\u7248\u672C\uFF0C\u5219\uFF1A
ng add ng-alain --defaultLanguage=en</code></pre><h2 id="\u989D\u5916\u53C2\u6570"><a class="lake-link"><i data-anchor="\u989D\u5916\u53C2\u6570"></i></a>\u989D\u5916\u53C2\u6570</h2><table><thead><tr><th>\u53C2\u6570\u540D</th><th>\u9ED8\u8BA4\u503C</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td><code>--form</code></td><td><code>true</code></td><td>\u662F\u5426\u9700\u8981\u52A8\u6001\u8868\u5355</td></tr><tr><td><code>--mock</code></td><td><code>true</code></td><td>\u662F\u5426\u9700\u8981 mock \u529F\u80FD</td></tr><tr><td><code>--defaultLanguage</code></td><td><code>zh</code></td><td>\u9ED8\u8BA4\u8BED\u8A00\uFF0C<a href="/cli/plugin/zh#\u652F\u6301\u8BED\u8A00\u5217\u8868" data-url="/cli/plugin/zh#\u652F\u6301\u8BED\u8A00\u5217\u8868">\u652F\u6301\u8BED\u8A00\u5217\u8868</a></td></tr><tr><td><code>--codeStyle</code></td><td><code>false</code></td><td>\u662F\u5426\u9700\u8981\u4EE3\u7801\u98CE\u683C</td></tr><tr><td><code>--i18n</code></td><td><code>false</code></td><td>\u662F\u5426\u9700\u8981\u56FD\u9645\u5316\u652F\u6301</td></tr></tbody></table><p>\u4F8B\u5982\u751F\u6210\u4E00\u4E2A\u5E26\u6709\u56FD\u9645\u5316\u9879\u76EE\uFF1A</p><pre class="hljs language-bash"><code>ng add ng-alain --i18n --defaultLanguage=en</code></pre><p>\u67E5\u770B\u66F4\u591A<a href="/cli/plugin" data-url="/cli/plugin">\u63D2\u4EF6</a>\u3002</p></section>`,meta:{order:10,title:"ng add",subtitle:"\u521B\u5EFA\u811A\u624B\u67B6",type:"Documents"},toc:[{id:"\u547D\u4EE4\u683C\u5F0F",title:"\u547D\u4EE4\u683C\u5F0F",h:2},{id:"\u989D\u5916\u53C2\u6570",title:"\u989D\u5916\u53C2\u6570",h:2}]}},demo:!1},this.codes=[]}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=d({type:t,selectors:[["app-cli-add"]],hostVars:2,hostBindings:function(e,a){e&2&&l("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(e,a){e&1&&i(0,"app-docs",0),e&2&&n("codes",a.codes)("item",a.item)},dependencies:[c],encapsulation:2})}}return t})();var h=(()=>{class t{constructor(){this.item={cols:1,urls:{"en-US":"schematics/docs/default.en-US.md","zh-CN":"schematics/docs/default.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><p>ng-alain provides a number of build modules, page templates, which have same option parameters, such as: <code>spec</code> for generating test pages, <code>flat</code> for flat directories, <code>inline-template</code> for inline template, etc.</p><p>However, parameters can be preset via <code>angular.json</code>.</p><pre class="hljs language-json"><code>// angular.json
{
  "schematics": {
    "ng-alain:module": {
      "routing": true
    },
    "ng-alain:list": {
      "skipTests": false
    },
    "ng-alain:edit": {
      "skipTests": false,
      "modal": true
    },
    "ng-alain:view": {
      "skipTests": false,
      "modal": true
    },
    "ng-alain:curd": {
      "skipTests": false
    },
    "@schematics/angular:module": {
      "routing": true
    },
    "@schematics/angular:component": {
      "skipTests": false,
      "flat": false,
      "inlineStyle": true,
      "inlineTemplate": false
    },
    "@schematics/angular:directive": {
      "skipTests": false
    },
    "@schematics/angular:service": {
      "skipTests": false
    }
  }
}</code></pre><p>You can execute the following command to get the parameter description:</p><pre class="hljs language-bash"><code>ng g ng-alain:list --help</code></pre></section>`,meta:{order:90,title:"Default parameter",type:"Documents"},toc:[]},"zh-CN":{content:`<section class="markdown"><p>ng-alain \u63D0\u4F9B\u8BF8\u591A\u751F\u6210\u6A21\u5757\u3001\u9875\u6A21\u677F\uFF0C\u4F46\u5B9E\u9645\u4E0A\u7EE7\u627F\u4E86\u539F\u751F Angular CLI \u7EC4\u4EF6\u9875\u7684\u4E00\u4E9B\u53C2\u6570\uFF0C\u4F8B\u5982\uFF1A<code>spec</code> \u8868\u793A\u662F\u5426\u751F\u6210\u6D4B\u8BD5\u9875\u3001<code>flat</code> \u8868\u793A\u6241\u5E73\u76EE\u5F55\u3001<code>inline-template</code> \u8868\u793A\u5185\u8054\u6A21\u677F\u5185\u5BB9\u7B49\u3002</p><p>\u7136\u800C\uFF0C\u5BF9\u4E8E\u8FD9\u4E9B\u53C2\u6570\u6211\u4EEC\u6CA1\u6709\u5FC5\u8981\u6BCF\u4E00\u6B21\u6267\u884C\u547D\u4EE4\u65F6\u90FD\u5199\u4E00\u904D\uFF0C\u53EF\u4EE5\u901A\u8FC7 <code>angular.json</code> \u5BF9\u53C2\u6570\u9884\u8BBE\u3002</p><p>\u4F8B\u5982\uFF1A</p><pre class="hljs language-json"><code>// angular.json
{
  "schematics": {
    "ng-alain:module": {
      "routing": true
    },
    "ng-alain:list": {
      "skipTests": false
    },
    "ng-alain:edit": {
      "skipTests": false,
      "modal": true
    },
    "ng-alain:view": {
      "skipTests": false,
      "modal": true
    },
    "ng-alain:curd": {
      "skipTests": false
    },
    "@schematics/angular:module": {
      "routing": true
    },
    "@schematics/angular:component": {
      "skipTests": false,
      "flat": false,
      "inlineStyle": true,
      "inlineTemplate": false
    },
    "@schematics/angular:directive": {
      "skipTests": false
    },
    "@schematics/angular:service": {
      "skipTests": false
    }
  }
}</code></pre><p>\u53EF\u4EE5\u901A\u8FC7\u6267\u884C\u4E0B\u5217\u547D\u4EE4\u6765\u83B7\u53D6\u6240\u6709\u53C2\u6570\u63CF\u8FF0\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:list --help</code></pre></section>`,meta:{order:90,title:"\u9ED8\u8BA4\u53C2\u6570",type:"Documents"},toc:[]}},demo:!1},this.codes=[]}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=d({type:t,selectors:[["app-cli-default"]],hostVars:2,hostBindings:function(e,a){e&2&&l("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(e,a){e&1&&i(0,"app-docs",0),e&2&&n("codes",a.codes)("item",a.item)},dependencies:[c],encapsulation:2})}}return t})();var u=(()=>{class t{constructor(){this.item={cols:1,urls:{"en-US":"schematics/docs/generate.en-US.md","zh-CN":"schematics/docs/generate.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="Foreword"><a class="lake-link"><i data-anchor="Foreword"></i></a>Foreword</h2><p><code>ng generate</code> (shorthand: <code>ng g</code>) is used to generate business pages. The default Angular Cli template is different from the ng-alain specification. For example, we want to include a <code>SharedModule</code> when generating a module.</p><p>ng-alain adds cool operations based on this.</p><h2 id="Commandformat"><a class="lake-link"><i data-anchor="Commandformat"></i></a>Commandformat</h2><pre class="hljs language-bash"><code>ng g ng-alain:[command name] [name] [options]</code></pre><p>Examples:</p><pre class="hljs language-bash"><code># Generate a trade module
ng g ng-alain:module trade
# Generate a TradeListComponent List component under the trade module
ng g ng-alain:list list -m=trade
# Generate a TradeListComponent List component and TradeService class under the trade module
ng g ng-alain:list list -m=trade --service=root
# Generate a ListComponent List component under the trade module
ng g ng-alain:list list -m=trade --withoutModulePrefixInComponentName=true
# Generate a TradeEditComponent Edit component under the trade module
ng g ng-alain:edit edit -m=trade</code></pre><blockquote><p>ng-alain has own file structure specification, which can cause exceptions when you break this file structure.</p></blockquote><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>-m</code> or <code>--module</code></td><td>Allows specification of the declaring module.</td></tr><tr><td><code>-t</code> or <code>--target</code></td><td>Specifies relative path, could be set like <code>bus/list</code></td></tr><tr><td><code>--modal</code></td><td>Specifies using modal mode</td></tr><tr><td><code>--withoutPrefix</code></td><td>Without prefix to selectors</td></tr><tr><td><code>--withoutModulePrefixInComponentName</code></td><td>Without prefix to component name</td></tr><tr><td><code>--service</code></td><td>Specifies how to generate service classes, can be set: <code>ignore</code>, <code>root</code>, <code>none</code></td></tr></tbody></table><h2 id="Module"><a class="lake-link"><i data-anchor="Module"></i></a>Module</h2><p>Generate a <code>trade</code> module:</p><pre class="hljs language-bash"><code>ng g ng-alain:module trade</code></pre><p>Will be generated <code>trade.module.ts</code>, <code>trade-routing.module.ts</code> in the <code>routes/trade</code> directory.</p><p>The module imports <code>SharedModule</code> and some import and export specifications, and you can't destroy these variable names (like this: <code>COMPONENTS</code>, <code>routes</code>).</p><p>By default, all the codes are stored under <code>app/routes</code>, which can be pointed to other folder through <code>ng-alain.json</code>, for example:</p><pre class="hljs language-json"><code>{
   "$schema": "./node_modules/ng-alain/schema.json",
   "projects": {
     // Indicates that ng-alain projects are stored under \`app/pages\`
     "ng-alain": {
       "routesRoot": "app/pages"
     }
   }
}</code></pre><h2 id="Businesspage"><a class="lake-link"><i data-anchor="Businesspage"></i></a>Businesspage</h2><ul><li><p><code>empty</code> Blank page</p></li><li><p><code>list</code> List page</p></li><li><p><code>edit</code> Edit page</p></li><li><p><code>view</code> View page</p></li><li><p><code>curd</code> List, edit, view pages</p></li></ul><p>Generate a <code>list</code> list page in the <code>trade</code> directory:</p><pre class="hljs language-bash"><code>ng g ng-alain:list list -m=trade</code></pre><p><strong>Note:</strong> <code>-m</code> must be specified because ng-alain thinks the page should be in a specific module, not a ghost.</p><h3 id="Cool"><a class="lake-link"><i data-anchor="Cool"></i></a>Cool</h3><p>In general, a module might includes the same type of business page, and its file structure might like this:</p><pre class="hljs language-null"><code>sys
  log
    view
      view.component.ts
    edit
      edit.component.ts
    log.component.ts
  sys.module.ts</code></pre><p>So when you want to generate a view page that should be under the <code>log</code> directory (could be set like <code>log/list</code>):</p><pre class="hljs language-bash"><code>ng g ng-alain:view view -m=sys -t=log</code></pre><p><strong>Override the default template pages</strong></p><p>If the default pages generated by commands <code>list</code>, <code>edit</code>, <code>view</code>, and <code>empty</code> are not expected by the business, can be override.</p><p>For example, override the <code>list</code> command default template, create the directory name <code>_list</code> under the root directory <code>_cli-tpl</code>, and the directory structure must be equivalent to the <a target="_blank" href="https://github.com/ng-alain/delon/tree/master/packages/schematics/list/files" data-url="https://github.com/ng-alain/delon/tree/master/packages/schematics/list/files">original list directory</a>.</p><h3 id="edit&viewpage"><a class="lake-link"><i data-anchor="edit&viewpage"></i></a>edit&viewpage</h3><p>For <code>edit</code>, <code>view</code>, the default is modal render, you can use the page render:</p><pre class="hljs language-bash"><code>ng g ng-alain:edit [page name] --modal=false</code></pre><blockquote><p>If you receive <code>No provider for NzModalRef!</code> error, because of modal component must be opened with <code>nzModalService</code>, and does not need to register into route.</p></blockquote><h2 id="Customtemplatepage"><a class="lake-link"><i data-anchor="Customtemplatepage"></i></a>Customtemplatepage</h2><p>In addition to the default, you can also customize the project-level business page.</p><p>For example, to create a custom edit page template, you only need to create the following directory structure in the project's root directory (You can get it via <a target="_blank" href="https://github.com/ng-alain/ng-alain/tree/master/_cli-tpl" data-url="https://github.com/ng-alain/ng-alain/tree/master/_cli-tpl">Github</a>):</p><pre class="hljs language-null"><code>\u2514\u2500\u2500 _cli-tpl
\u2502   \u2514\u2500\u2500 edit                                                       // Your template name
\u2502       \u2514\u2500\u2500 __path__                                               // (name fixed value)
\u2502           \u2514\u2500\u2500 __name@dasherize@if-flat__                         // (name fixed value)
\u2502               \u251C\u2500\u2500 __name@dasherize__.component.ts.template       // Component class file (name fixed value)
\u2502               \u251C\u2500\u2500 __name@dasherize__.component.html.template     // Component html file (name fixed value)
\u2502               \u2514\u2500\u2500 __name@dasherize__.component.spec.ts.template  // Component spec file (name fixed value)
\u2514\u2500\u2500 src</code></pre><p>After that, just run:</p><pre class="hljs language-bash"><code>ng g ng-alain:tpl [your template name] [name] -m=trade</code></pre><h3 id="Howtowriteatemplatefile"><a class="lake-link"><i data-anchor="Howtowriteatemplatefile"></i></a>Howtowriteatemplatefile</h3><p>In the directory structure of the custom page, the file name begins with the <code>__</code> prefix is a variable placeholder, Cli passes some parameters and methods:</p><table><thead><tr><th>Type</th><th>Name</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>Variable</td><td>project</td><td>-</td><td>Project name</td></tr><tr><td>Variable</td><td>name</td><td>-</td><td>Name, equivalent command line <code>&lt;name></code></td></tr><tr><td>Variable</td><td>path</td><td>-</td><td>Target path</td></tr><tr><td>Variable</td><td>flat</td><td><code>false</code></td><td>Whether file is flat</td></tr><tr><td>Variable</td><td>inlineTemplate</td><td><code>false</code></td><td>Whether inline template(Fixed value <code>false</code>)</td></tr><tr><td>Variable</td><td>selector</td><td>-</td><td>Component <code>selector</code></td></tr><tr><td>Variable</td><td>componentName</td><td>-</td><td>Component name</td></tr><tr><td>Variable</td><td>changeDetection</td><td><code>Default</code></td><td>Component <code>changeDetection</code> value</td></tr><tr><td>Variable</td><td>modal</td><td>-</td><td>Whether to use Modal to render</td></tr><tr><td>Method</td><td>decamelize</td><td>-</td><td>Converts a camelized string into all lower case separated by underscores</td></tr><tr><td>Method</td><td>dasherize</td><td>-</td><td>Replaces underscores, spaces, or camelCase with dashes</td></tr><tr><td>Method</td><td>camelize</td><td>-</td><td>Returns the lowerCamelCase form of a string</td></tr><tr><td>Method</td><td>classify</td><td>-</td><td>Returns the UpperCamelCase form of a string</td></tr><tr><td>Method</td><td>underscore</td><td>-</td><td>More general than decamelize. Returns the lower_case_and_underscored</td></tr><tr><td>form of a string.</td></tr><tr><td>Method</td><td>capitalize</td><td>-</td><td>Returns the Capitalized form of a string</td></tr></tbody></table><p>These variables or methods can be used in templates, for example: <code>&lt;%=componentName%></code> for component names, <code>&lt;% %></code> for JavaScript code. You can refer to:</p><ul><li><p><a target="_blank" href="https://github.com/ng-alain/delon/blob/master/packages/schematics/edit/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html" data-url="https://github.com/ng-alain/delon/blob/master/packages/schematics/edit/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html">delon</a></p></li><li><p><a target="_blank" href="https://github.com/angular/material2/blob/master/src/lib/schematics/dashboard/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html" data-url="https://github.com/angular/material2/blob/master/src/lib/schematics/dashboard/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html">material2</a></p></li></ul><h3 id="CustomData"><a class="lake-link"><i data-anchor="CustomData"></i></a>CustomData</h3><p>The <code>tpl</code> command allows you to process the data further before generating the file, The command will check the <code>_cli-tpl/_fix.js</code> file during execution and call the <code>fix</code> method, which must return a <code>Promise</code> object, for example:</p><blockquote><p><strong>Note: </strong> CLI is a Node JS program, so the syntax is based on Node JS.</p></blockquote><pre class="hljs language-js"><code>function fix(options) {
  return new Promise((resolve) => {
    resolve();
  });
}

module.exports = {
  fix
};</code></pre><p>The <code>fix</code> method has only an <code>options</code> parameter, which contains the CLI used to generate all parameter data, even if it is undefined, for example:</p><pre class="hljs language-bash"><code>ng g ng-alain:tpl list -m=setting --import-type=UserDto</code></pre><p><code>import-type</code> is not a defined parameter of the command itself, but <code>options</code> will convert these undefined parameters to an <code>extraArgs</code> object, so the <code>options</code> you receive will be:</p><pre class="hljs language-json"><code>{
  "tplName": "test",
  "modal": true,
  ...
  "extraArgs": {
    "import-type": "UserDto"
  }
}</code></pre><p>The <code>options</code> object is passed to the template engine, so you can attach some processed data to <code>options</code> and use them in the template file, for example:</p><pre class="hljs language-json"><code>{
  "tplName": "test",
  "modal": true,
  ...
  "extraArgs": {
    "import-type": "UserDto",
    "newData": "asdf"
  }
}</code></pre><p>You can apply <code>newData</code> to the template, for example <code>__name@dasherize__.component.html</code>:</p><pre class="hljs language-html"><code>&lt;page-header&gt;&lt;/page-header&gt;
&lt;%= extraArgs.newData %&gt;</code></pre><p>The result is:</p><pre class="hljs language-html"><code>&lt;page-header&gt;&lt;/page-header&gt;
asdf</code></pre></section>`,meta:{order:20,title:"ng g",subtitle:"Business page",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Commandformat",title:"Command format",h:2},{id:"Module",title:"Module",h:2},{id:"Businesspage",title:"Business page",h:2,children:[{id:"Cool",title:"Cool",h:3},{id:"edit&viewpage",title:"edit & view page",h:3}]},{id:"Customtemplatepage",title:"Custom template page",h:2,children:[{id:"Howtowriteatemplatefile",title:"How to write a template file",h:3},{id:"CustomData",title:"Custom Data",h:3}]}]},"zh-CN":{content:`<section class="markdown"><h2 id="\u5199\u5728\u524D\u9762"><a class="lake-link"><i data-anchor="\u5199\u5728\u524D\u9762"></i></a>\u5199\u5728\u524D\u9762</h2><p><code>ng generate</code>\uFF08\u7B80\u5199\uFF1A<code>ng g</code>\uFF09\u7528\u4E8E\u751F\u6210\u4E1A\u52A1\u7EC4\u4EF6\u9875\uFF0C\u9ED8\u8BA4 Angular \u6240\u63D0\u4F9B\u7684\u6A21\u677F\u8DDF ng-alain \u6240\u9700\u8981\u7684\u4F1A\u6709\u4E00\u4E9B\u4E0D\u540C\uFF0C\u4F8B\u5982\u6211\u4EEC\u5E0C\u671B\u751F\u6210\u4E00\u4E2A\u6A21\u5757\u65F6\u5E94\u8BE5\u5305\u62EC\u5BFC\u5165 <code>SharedModule</code>\u3002</p><p>ng-alain \u5728\u6B64\u57FA\u7840\u4E0A\u589E\u52A0\u4E86\u5F88\u591A\u5F88\u9177\u7684\u9A9A\u64CD\u4F5C\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u6240\u6709\u7684\u4EE3\u7801\u7EDF\u4E00\u5B58\u653E\u4E8E <code>app/routes</code> \u4E0B\u9762\uFF0C\u53EF\u901A\u8FC7 <code>ng-alain.json</code> \u6307\u5411\u5176\u4ED6\u76EE\u5F55\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-json"><code>{
  "$schema": "./node_modules/ng-alain/schema.json",
  "projects": {
    // \u8868\u793A ng-alain \u9879\u76EE\u90FD\u5B58\u653E\u4E8E \`app/pages\` \u4E0B
    "ng-alain": {
      "routesRoot": "app/pages"
    }
  }
}</code></pre><h2 id="\u547D\u4EE4\u683C\u5F0F"><a class="lake-link"><i data-anchor="\u547D\u4EE4\u683C\u5F0F"></i></a>\u547D\u4EE4\u683C\u5F0F</h2><pre class="hljs language-bash"><code>ng g ng-alain:[command name] [name] [options]</code></pre><p>\u793A\u4F8B\uFF1A</p><pre class="hljs language-bash"><code># \u751F\u6210\u4E00\u4E2A trade \u6A21\u5757
ng g ng-alain:module trade
# trade \u6A21\u5757\u4E0B\u751F\u6210\u4E00\u4E2A TradeListComponent List\u7EC4\u4EF6
ng g ng-alain:list list -m=trade
# trade \u6A21\u5757\u4E0B\u751F\u6210\u4E00\u4E2A TradeEditComponent List\u7EC4\u4EF6 \u53CA TradeService \u670D\u52A1\u7C7B
ng g ng-alain:list list -m=trade --service=root
# trade \u6A21\u5757\u4E0B\u751F\u6210\u4E00\u4E2A ListComponent List\u7EC4\u4EF6
ng g ng-alain:list list -m=trade --withoutModulePrefixInComponentName=true
# trade \u6A21\u5757\u4E0B\u751F\u6210\u4E00\u4E2A TradeEditComponent Edit\u7EC4\u4EF6
ng g ng-alain:edit edit -m=trade</code></pre><blockquote><p>ng-alain \u6709\u81EA\u5DF1\u7684\u4E00\u5957\u6587\u4EF6\u7EC4\u7EC7\u7ED3\u6784\uFF0C\u5F53\u4F60\u7834\u574F\u8FD9\u4E9B\u7ED3\u6784\u65F6\uFF0C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u4E0B\u5217\u6307\u4EE4\u4EA7\u751F\u5F02\u5E38\u3002</p></blockquote><table><thead><tr><th>\u53C2\u6570</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td><code>-m</code> \u6216 <code>--module</code></td><td>\u6307\u5B9A\u76EE\u6807\u6A21\u5757</td></tr><tr><td><code>-t</code> \u6216 <code>--target</code></td><td>\u6307\u5B9A\u76EE\u6807\u8DEF\u5F84\uFF0C\u652F\u6301 <code>bus/list</code> \u5199\u6CD5</td></tr><tr><td><code>--modal</code></td><td>\u6307\u5B9A\u662F\u5426\u4F7F\u7528\u6A21\u6001\u6846</td></tr><tr><td><code>--withoutPrefix</code></td><td>\u6307\u5B9A\u9009\u62E9\u5668\u540D\u4E0D\u52A0\u524D\u7F00</td></tr><tr><td><code>--withoutModulePrefixInComponentName</code></td><td>\u7EC4\u4EF6\u540D\u4E0D\u52A0\u6A21\u5757\u540D\u524D\u7F00</td></tr><tr><td><code>--service</code></td><td>\u6307\u5B9A\u5982\u4F55\u751F\u6210\u670D\u52A1\u7C7B\uFF0C\u5305\u542B\uFF1A<code>ignore</code>\u3001<code>root</code>\u3001<code>none</code></td></tr></tbody></table><h2 id="Module\u6A21\u5757"><a class="lake-link"><i data-anchor="Module\u6A21\u5757"></i></a>Module\u6A21\u5757</h2><p>\u751F\u6210\u4E00\u4E2A <code>trade</code> \u6A21\u5757\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:module trade</code></pre><p>\u4F1A\u5728 <code>routes/trade</code> \u751F\u6210\u4E24\u4E2A\u6587\u4EF6 <code>trade.module.ts</code>\u3001<code>trade-routing.module.ts</code>\uFF0C\u4F60\u65E0\u6CD5\u6307\u5B9A\u4E0D\u751F\u6210 <code>*-routing.module.ts</code> \u56E0\u4E3A\u8FD9\u662F ng-alain \u7684\u4EFB\u6027\u3002</p><p>\u6A21\u5757\u5185\u5BB9\u5305\u62EC\u4E86\u5BFC\u5165 <code>SharedModule</code> \u4EE5\u53CA\u4E00\u4E9B\u7EDF\u4E00\u6027\u5BFC\u5165\u4E0E\u5BFC\u51FA\u7684\u65B9\u5F0F\uFF0C\u5E76\u4E14\u4F60\u4E0D\u53EF\u80FD\u7834\u574F\u8FD9\u4E9B\u53D8\u91CF\u540D\uFF08\u4F8B\u5982\uFF1A<code>COMPONENTS</code>\u3001<code>routes</code>\uFF09\u3002</p><h2 id="\u4E1A\u52A1\u9875"><a class="lake-link"><i data-anchor="\u4E1A\u52A1\u9875"></i></a>\u4E1A\u52A1\u9875</h2><p>\u76EE\u524D\u5305\u542B\u7684\u4E1A\u52A1\u7EC4\u4EF6\u9875\uFF0C\u5305\u62EC\uFF1A</p><ul><li><p><code>empty</code> \u7A7A\u767D\u9875</p></li><li><p><code>list</code> \u5217\u8868\u9875</p></li><li><p><code>edit</code> \u7F16\u8F91\u9875</p></li><li><p><code>view</code> \u67E5\u770B\u9875</p></li><li><p><code>curd</code> \u5217\u8868\u3001\u7F16\u8F91\u3001\u67E5\u770B</p></li></ul><p>\u5728 <code>trade</code> \u4E0B\u751F\u6210 <code>list</code> \u5217\u8868\u9875\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:list list -m=trade</code></pre><p><strong>\u6CE8\u610F\uFF1A</strong> <code>-m</code> \u662F\u5FC5\u987B\u6307\u5B9A\u7684\uFF0C\u56E0\u4E3A ng-alain \u8BA4\u4E3A\u9875\u9762\u5E94\u8BE5\u5728\u67D0\u4E2A\u5177\u4F53\u7684\u6A21\u5757\u91CC\uFF0C\u800C\u4E0D\u662F\u5E7D\u7075\u3002</p><h3 id="\u9A9A\u64CD\u4F5C"><a class="lake-link"><i data-anchor="\u9A9A\u64CD\u4F5C"></i></a>\u9A9A\u64CD\u4F5C</h3><p>\u4E00\u822C\u800C\u8A00\uFF0C\u4E00\u4E2A\u6A21\u5757\u53EF\u80FD\u4F1A\u5305\u542B\u76F8\u540C\u7C7B\u578B\u7684\u4E1A\u52A1\u9875\uFF0C\u800C\u6211\u4EEC\u4EA7\u751F\u7684\u6587\u4EF6\u7ED3\u6784\u53EF\u80FD\u5E0C\u671B\u662F\uFF1A</p><pre class="hljs language-null"><code>sys
  log
    view
      view.component.ts
    log.component.ts
  sys.module.ts</code></pre><p>\u56E0\u6B64\uFF0C\u5F53\u4F60\u5E0C\u671B\u751F\u6210\u7684\u67E5\u770B\u5E94\u8BE5\u662F\u5728 <code>log</code> \u7EC4\u4EF6\uFF08\u652F\u6301 <code>log/list</code> \u591A\u7EA7\u5199\u6CD5\uFF09\u4E0B\u9762\u65F6\uFF0C\u4F60\u53EF\u4EE5\u8FD9\u6837\u5B50\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:view view -m=sys -t=log</code></pre><p><strong>\u8986\u76D6\u9ED8\u8BA4\u6A21\u677F\u9875</strong></p><p>\u82E5 <code>list</code>\u3001<code>edit</code>\u3001<code>view</code>\u3001<code>empty</code> \u56DB\u4E2A\u6307\u4EE4\u6240\u4EA7\u751F\u9ED8\u8BA4\u9875\u5E76\u975E\u6240\u5728\u4E1A\u52A1\u671F\u671B\uFF0C\u53EF\u4EE5\u8986\u76D6\u5B83\u4EEC\u3002</p><p>\u4F8B\u5982\u8986\u76D6 <code>list</code> \u547D\u4EE4\u9ED8\u8BA4\u6A21\u677F\uFF0C\u5728\u6839\u76EE\u5F55 <code>_cli-tpl</code> \u4E0B\u521B\u5EFA\u76EE\u5F55\u540D <code>_list</code>\uFF0C\u76EE\u5F55\u7ED3\u6784\u52A1\u5FC5\u7B49\u540C <a target="_blank" href="https://github.com/ng-alain/delon/tree/master/packages/schematics/list/files" data-url="https://github.com/ng-alain/delon/tree/master/packages/schematics/list/files">\u539F\u59CBlist\u76EE\u5F55</a> \u7684\u7ED3\u6784\u3002</p><h3 id="edit&view\u9875"><a class="lake-link"><i data-anchor="edit&view\u9875"></i></a>edit&view\u9875</h3><p>\u5BF9\u4E8E <code>edit</code>\u3001<code>view</code> \u9ED8\u8BA4\u662F\u4EE5\u6A21\u6001\u6846\u5C55\u793A\u6765\u751F\u6210\uFF0C\u4F60\u53EF\u4EE5\u6539\u7528\u9875\u9762\u5C55\u793A\u5219\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:edit [page name] --modal=false</code></pre><blockquote><p>\u5982\u679C\u4F60\u4E0D\u5C0F\u5FC3\u5C06\u6536\u5230\u3010No provider for NzModalRef! \u3011\u8868\u660E\u4F60\u628A\u4E00\u4E2A\u9700\u8981\u4F7F\u7528 <code>nzModalService</code> \u6253\u5F00\u7684\u6A21\u6001\u6846\u7EC4\u4EF6\uFF0C\u7528\u4E86\u8DEF\u7531\u6CE8\u518C\u7684\u65B9\u5F0F\u3002\u6253\u5F00\u6A21\u6001\u6846\u7EC4\u4EF6\u65E0\u987B\u6CE8\u518C\u8DEF\u7531\u3002</p></blockquote><h2 id="\u81EA\u5B9A\u4E49\u9875"><a class="lake-link"><i data-anchor="\u81EA\u5B9A\u4E49\u9875"></i></a>\u81EA\u5B9A\u4E49\u9875</h2><p>\u9664\u4E0A\u8FF0\u9ED8\u8BA4\u4E1A\u52A1\u9875\u4EE5\u5916\uFF0C\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u5C5E\u4E8E\u9879\u76EE\u7EA7\u522B\u4E1A\u52A1\u9875\uFF0C\u4F8B\u5982\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A\u81EA\u5DF1\u7684\u7F16\u8F91\u9875\u6A21\u677F\uFF0C\u5219\u53EA\u9700\u8981\u5728\u9879\u76EE\u7684\u6839\u76EE\u5F55\u521B\u5EFA\u4EE5\u4E0B\u76EE\u5F55\u7ED3\u6784\uFF08\u4F60\u53EF\u4EE5\u901A\u8FC7 <a target="_blank" href="https://github.com/ng-alain/ng-alain/tree/master/_cli-tpl" data-url="https://github.com/ng-alain/ng-alain/tree/master/_cli-tpl">Github</a> \u4E0A\u6765\u83B7\u53D6\uFF09\uFF1A</p><pre class="hljs language-null"><code>\u2514\u2500\u2500 _cli-tpl
\u2502   \u2514\u2500\u2500 edit                                                       // \u6A21\u677F\u540D\u79F0
\u2502       \u2514\u2500\u2500 __path__                                               // \uFF08\u540D\u79F0\u56FA\u5B9A\u503C\uFF09
\u2502           \u2514\u2500\u2500 __name@dasherize@if-flat__                         // \uFF08\u540D\u79F0\u56FA\u5B9A\u503C\uFF09
\u2502               \u251C\u2500\u2500 __name@dasherize__.component.ts.template       // \u7EC4\u4EF6\u7C7B\u6587\u4EF6\uFF08\u540D\u79F0\u56FA\u5B9A\u503C\uFF09
\u2502               \u251C\u2500\u2500 __name@dasherize__.component.html.template     // \u7EC4\u4EF6\u6A21\u677F\u6587\u4EF6\uFF08\u540D\u79F0\u56FA\u5B9A\u503C\uFF09
\u2502               \u2514\u2500\u2500 __name@dasherize__.component.spec.ts.template  // \u7EC4\u4EF6\u6D4B\u8BD5\u6587\u4EF6\uFF08\u540D\u79F0\u56FA\u5B9A\u503C\uFF09
\u2514\u2500\u2500 src</code></pre><p>\u4E4B\u540E\uFF0C\u53EA\u9700\u8981\u8FD0\u884C\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:tpl [your template name] [name] -m=trade</code></pre><blockquote><p>\u81EA\u5B9A\u4E49\u9875\u53C2\u6570\u540C\u4E1A\u52A1\u9875\u4E00\u81F4\u3002</p></blockquote><h3 id="\u5982\u4F55\u7F16\u5199\u6A21\u677F\u6587\u4EF6"><a class="lake-link"><i data-anchor="\u5982\u4F55\u7F16\u5199\u6A21\u677F\u6587\u4EF6"></i></a>\u5982\u4F55\u7F16\u5199\u6A21\u677F\u6587\u4EF6</h3><p>\u5728\u81EA\u5B9A\u4E49\u9875\u7684\u76EE\u5F55\u7ED3\u6784\u91CC\u6211\u4EEC\u770B\u5230\u6587\u4EF6\u540D\u4EE5 <code>__</code> \u524D\u7F00\u5F00\u5934\uFF0C\u4E8B\u5B9E\u4E0A\u4ED6\u4EEC\u662F\u4E00\u4E9B\u53D8\u91CF\b\u5360\u4F4D\u7B26\uFF0CCli \u9ED8\u8BA4\u4F20\u9012\u4E00\u4E9B\u53C2\u6570\u53CA\u65B9\u6CD5\uFF1A</p><table><thead><tr><th>\u7C7B\u578B</th><th>\u53C2\u6570\u540D</th><th>\u9ED8\u8BA4</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>\u53D8\u91CF</td><td>project</td><td>-</td><td>\u9879\u76EE\u540D</td></tr><tr><td>\u53D8\u91CF</td><td>name</td><td>-</td><td>\u540D\u79F0\uFF0C\u76F8\u5F53\u4E8E\u547D\u4EE4\u884C\u7684 <code>&lt;name></code></td></tr><tr><td>\u53D8\u91CF</td><td>path</td><td>-</td><td>\u76EE\u6807\u8DEF\u5F84</td></tr><tr><td>\u53D8\u91CF</td><td>flat</td><td><code>false</code></td><td>\u6587\u4EF6\u662F\u5426\u6241\u5E73\u7ED3\u6784</td></tr><tr><td>\u53D8\u91CF</td><td>inlineTemplate</td><td><code>false</code></td><td>\u662F\u5426\u5185\u8054\u6A21\u677F\uFF08\u56FA\u5B9A\u503C\uFF1A<code>false</code>\uFF09</td></tr><tr><td>\u53D8\u91CF</td><td>selector</td><td>-</td><td>\u7EC4\u4EF6 <code>selector</code></td></tr><tr><td>\u53D8\u91CF</td><td>componentName</td><td>-</td><td>\u7EC4\u4EF6\u540D\u79F0</td></tr><tr><td>\u53D8\u91CF</td><td>changeDetection</td><td><code>Default</code></td><td>\u7EC4\u4EF6 <code>changeDetection</code> \u503C</td></tr><tr><td>\u53D8\u91CF</td><td>modal</td><td>-</td><td>\u662F\u5426\u4F7F\u7528 Modal \u5C55\u793A</td></tr><tr><td>\u65B9\u6CD5</td><td>decamelize</td><td>-</td><td>\u5C06\u5B57\u6BCD\u4E32\u8F6C\u6362\u4E3A\u7531\u4E0B\u5212\u7EBF\u5206\u9694\u7684\u6240\u6709\u5C0F\u5199\u5B57\u6BCD</td></tr><tr><td>\u65B9\u6CD5</td><td>dasherize</td><td>-</td><td>\u5C06\u7A7A\u683C\u6216\u4E0B\u5212\u7EBF\u7528\u7834\u6298\u53F7\u66FF\u6362</td></tr><tr><td>\u65B9\u6CD5</td><td>camelize</td><td>-</td><td>\u8FD4\u56DE\u5B57\u7B26\u4E32\u7684\u5C0F\u9A86\u9A7C\u62FC\u5199\u6CD5\u5F62\u5F0F</td></tr><tr><td>\u65B9\u6CD5</td><td>classify</td><td>-</td><td>\u8FD4\u56DE\u5B57\u7B26\u4E32\u7684\u5927\u9A86\u9A7C\u62FC\u5199\u6CD5\u5F62\u5F0F</td></tr><tr><td>\u65B9\u6CD5</td><td>underscore</td><td>-</td><td>\u5C06\u5B57\u6BCD\u4E32\u8F6C\u6362\u4E3A\u7531\u4E0B\u5212\u7EBF\u5206\u9694\u7684\u6240\u6709\u5C0F\u5199\u5B57\u6BCD</td></tr><tr><td>\u65B9\u6CD5</td><td>capitalize</td><td>-</td><td>\u8FD4\u56DE\u5B57\u7B26\u4E32\u9996\u5B57\u6BCD\u5927\u5199</td></tr></tbody></table><p>\u8FD9\u4E9B\u53D8\u91CF\u6216\u65B9\u6CD5\u53EF\u4EE5\u5728\u6A21\u677F\u4E2D\u4F7F\u7528\uFF0C\u4F8B\u5982\uFF1A<code>&lt;%=componentName%></code> \u8868\u793A\u7EC4\u4EF6\u540D\uFF0C\u4EFB\u4F55\u4F7F\u7528 <code>&lt;% %></code> \u5185\u53EF\u4EE5\u4F7F\u7528 JavaScript \u4EE3\u7801\u3002\u6709\u5173\u6A21\u677F\u7F16\u5199\u53EF\u4EE5\u53C2\u8003\uFF1A</p><ul><li><p><a target="_blank" href="https://github.com/ng-alain/delon/blob/master/packages/schematics/edit/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html" data-url="https://github.com/ng-alain/delon/blob/master/packages/schematics/edit/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html">delon</a></p></li><li><p><a target="_blank" href="https://github.com/angular/material2/blob/master/src/lib/schematics/dashboard/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html" data-url="https://github.com/angular/material2/blob/master/src/lib/schematics/dashboard/files/__path__/__name%40dasherize%40if-flat__/__name%40dasherize__.component.html">material2</a></p></li></ul><h3 id="\u81EA\u5B9A\u4E49\u6570\u636E"><a class="lake-link"><i data-anchor="\u81EA\u5B9A\u4E49\u6570\u636E"></i></a>\u81EA\u5B9A\u4E49\u6570\u636E</h3><p><code>tpl</code> \u547D\u4EE4\u5728\u751F\u6210\u6587\u4EF6\u4E4B\u524D\u5141\u8BB8\u4F60\u8FDB\u4E00\u6B65\u5904\u7406\u6570\u636E\uFF0C\u547D\u4EE4\u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\u4F1A\u68C0\u67E5\u662F\u5426\u5B58\u5728 <code>_cli-tpl/_fix.js</code> \u6587\u4EF6\uFF0C\u5E76\u8C03\u7528 <code>fix</code> \u65B9\u6CD5\uFF0C\u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF0C\u4F8B\u5982\uFF1A</p><blockquote><p><strong>\u6CE8\uFF1A</strong> CLI \u662F\u4E00\u4E2A Node JS \u7A0B\u5E8F\uFF0C\u56E0\u6B64\u8BED\u6CD5\u4EE5 Node JS \u4E3A\u51C6\u3002</p></blockquote><pre class="hljs language-js"><code>function fix(options) {
  return new Promise((resolve) => {
    resolve();
  });
}

module.exports = {
  fix
};</code></pre><p><code>fix</code> \u53EA\u6709\u4E00\u4E2A <code>options</code> \u53C2\u6570\uFF0C\u5B83\u5305\u542B CLI \u4EA7\u751F\u6240\u6709\u53C2\u6570\u6570\u636E\uFF0C\u54EA\u6015\u662F\u4E00\u4E9B\u672A\u5B9A\u4E49\u53C2\u6570\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:tpl list -m=setting --import-type=UserDto</code></pre><p>\u5176\u4E2D <code>import-type</code> \u5E76\u4E0D\u662F\u547D\u4EE4\u81EA\u8EAB\u7684\u5B9A\u4E49\u53C2\u6570\uFF0C\u4F46 <code>options</code> \u4F1A\u5C06\u8FD9\u4E9B\u672A\u5B9A\u4E49\u53C2\u6570\u8F6C\u6362\u6210 <code>extraArgs</code> \u5BF9\u8C61\uFF0C\u56E0\u6B64\u4F60\u63A5\u6536\u5230\u7684 <code>options</code> \u4F1A\u662F:</p><pre class="hljs language-json"><code>{
  "tplName": "test",
  "modal": true,
  ...
  "extraArgs": {
    "import-type": "UserDto"
  }
}</code></pre><p><code>options</code> \u5BF9\u8C61\u4F1A\u4F20\u9012\u7ED9\u6A21\u677F\u5F15\u64CE\uFF0C\u7531\u6B64\u4F60\u53EF\u4EE5\u9644\u52A0\u4E00\u4E9B\u5904\u7406\u540E\u7684\u6570\u636E\u7ED9 <code>options</code>\uFF0C\u5E76\u5728\u6A21\u677F\u6587\u4EF6\u5185\u4F7F\u7528\u5B83\u4EEC\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-json"><code>{
  "tplName": "test",
  "modal": true,
  ...
  "extraArgs": {
    "import-type": "UserDto",
    "newData": "asdf"
  }
}</code></pre><p>\u4F60\u53EF\u4EE5\u5C06 <code>newData</code> \u5E94\u7528\u5230\u6A21\u677F\u5F53\u4E2D\uFF0C\u4F8B\u5982 <code>__name@dasherize__.component.html</code>\uFF1A</p><pre class="hljs language-html"><code>&lt;page-header&gt;&lt;/page-header&gt;
&lt;%= extraArgs.newData %&gt;</code></pre><p>\u7ED3\u679C\u4E3A\uFF1A</p><pre class="hljs language-html"><code>&lt;page-header&gt;&lt;/page-header&gt;
asdf</code></pre></section>`,meta:{order:20,title:"ng g",subtitle:"\u4E1A\u52A1\u9875",type:"Documents"},toc:[{id:"\u5199\u5728\u524D\u9762",title:"\u5199\u5728\u524D\u9762",h:2},{id:"\u547D\u4EE4\u683C\u5F0F",title:"\u547D\u4EE4\u683C\u5F0F",h:2},{id:"Module\u6A21\u5757",title:"Module \u6A21\u5757",h:2},{id:"\u4E1A\u52A1\u9875",title:"\u4E1A\u52A1\u9875",h:2,children:[{id:"\u9A9A\u64CD\u4F5C",title:"\u9A9A\u64CD\u4F5C",h:3},{id:"edit&view\u9875",title:"edit & view \u9875",h:3}]},{id:"\u81EA\u5B9A\u4E49\u9875",title:"\u81EA\u5B9A\u4E49\u9875",h:2,children:[{id:"\u5982\u4F55\u7F16\u5199\u6A21\u677F\u6587\u4EF6",title:"\u5982\u4F55\u7F16\u5199\u6A21\u677F\u6587\u4EF6",h:3},{id:"\u81EA\u5B9A\u4E49\u6570\u636E",title:"\u81EA\u5B9A\u4E49\u6570\u636E",h:3}]}]}},demo:!1},this.codes=[]}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=d({type:t,selectors:[["app-cli-generate"]],hostVars:2,hostBindings:function(e,a){e&2&&l("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(e,a){e&1&&i(0,"app-docs",0),e&2&&n("codes",a.codes)("item",a.item)},dependencies:[c],encapsulation:2})}}return t})();var m=(()=>{class t{constructor(){this.item={cols:1,urls:{"en-US":"schematics/docs/getting-started.en-US.md","zh-CN":"schematics/docs/getting-started.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="Foreword"><a class="lake-link"><i data-anchor="Foreword"></i></a>Foreword</h2><p>Using ng-alain scaffolding should as use as possible the <code>ng</code> command set provided by the Angular CLI to build, upgrade, etc., ng-alain also implemented some cool things:</p><ul><li><p>Build empty scaffolding with <a href="/cli/add" data-url="/cli/add">ng add</a></p></li><li><p>Use <a href="/cli/generate" data-url="/cli/generate">ng g</a> to build modules, business pages</p></li><li><p>Pluggable <a href="/cli/plugin" data-url="/cli/plugin">plugin</a></p></li></ul><h2 id="Installation"><a class="lake-link"><i data-anchor="Installation"></i></a>Installation</h2><p>We don't recommend directly cloning the git repository, but instead using <code>ng add</code> to build the ng-alain project, there are a few simple steps:</p><ol><li><p>Create an empty angular project</p></li></ol><pre class="hljs language-bash"><code># Make sure you are using the latest version of Angular cli
ng new demo --style less</code></pre><p>2, add ng-alain scaffolding</p><pre class="hljs language-bash"><code>ng add ng-alain --defaultLanguage=en</code></pre><blockquote><p>If you any querstion, please refer to <a href="/docs/faq" data-url="/docs/faq">FAQ</a></p></blockquote><p>3, running</p><pre class="hljs language-bash"><code>ng serve</code></pre><h2 id="Howtoupgrade"><a class="lake-link"><i data-anchor="Howtoupgrade"></i></a>Howtoupgrade</h2><p>Suggest Star or Watch <a target="_blank" href="https://github.com/ng-alain/ng-alain" data-url="https://github.com/ng-alain/ng-alain">source code</a> repository to help you better understand change log.</p><p>please refer to <a href="/docs/upgrade" data-url="/docs/upgrade">upgrade</a>.</p></section>`,meta:{order:1,title:"Getting Started",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Installation",title:"Installation",h:2},{id:"Howtoupgrade",title:"How to upgrade",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="\u5199\u5728\u524D\u9762"><a class="lake-link"><i data-anchor="\u5199\u5728\u524D\u9762"></i></a>\u5199\u5728\u524D\u9762</h2><p>\u4F7F\u7528 ng-alain \u811A\u624B\u67B6\u5E94\u5C3D\u53EF\u80FD\u7684\u4F7F\u7528 Angular CLI \u6240\u63D0\u4F9B\u7684 <code>ng</code> \u547D\u4EE4\u7EC4\uFF0C\u6765\u6784\u5EFA\u3001\u5347\u7EA7\u7B49\uFF0Cng-alain \u4E5F\u5B9E\u73B0\u4E86\u4E00\u4E9B\u6BD4\u8F83\u9177\u7684\u4E8B\uFF1A</p><ul><li><p>\u4F7F\u7528 <a href="/cli/add" data-url="/cli/add">ng add</a> \u6784\u5EFA\u7A7A\u811A\u624B\u67B6</p></li><li><p>\u4F7F\u7528 <a href="/cli/generate" data-url="/cli/generate">ng g</a> \u6765\u6784\u5EFA\u6A21\u5757\u3001\u4E1A\u52A1\u9875</p></li><li><p>\u53EF\u63D2\u62D4 <a href="/cli/plugin" data-url="/cli/plugin">\u63D2\u4EF6</a></p></li></ul><h2 id="\u5982\u4F55\u4F7F\u7528"><a class="lake-link"><i data-anchor="\u5982\u4F55\u4F7F\u7528"></i></a>\u5982\u4F55\u4F7F\u7528</h2><p>\u6211\u4EEC\u4E0D\u5EFA\u8BAE\u76F4\u63A5\u514B\u9686 Github \u6E90\u4EE3\u7801\uFF0C\u800C\u5E94\u8BE5\u4F7F\u7528 <code>ng add</code> \u6765\u6784\u5EFA ng-alain \u9879\u76EE\uFF0C\u800C\u6784\u5EFA\u4E00\u4E2A\u7A7A ng-alain \u53EA\u9700\u8981\u7B80\u5355\u51E0\u4E2A\u52A8\u4F5C\uFF1A</p><p>1\u3001\u521B\u5EFA\u4E00\u4E2A\u7A7A angular \u9879\u76EE</p><pre class="hljs language-bash"><code># \u786E\u4FDD\u4F7F\u7528\u7684\u662F\u6700\u65B0\u7248\u672C Angular cli
ng new demo --style less</code></pre><p>2\u3001\u6DFB\u52A0 ng-alain \u811A\u624B\u67B6</p><pre class="hljs language-bash"><code>ng add ng-alain
# \u5982\u679C\u4F60\u60F3\u521B\u5EFA\u4E00\u4E2A\u82F1\u6587\u7248\u672C\uFF0C\u5219\uFF1A
ng add ng-alain --defaultLanguage=en</code></pre><blockquote><p>\u9047\u5230\u95EE\u9898\u8BF7\u9605\u8BFB <a href="/docs/faq" data-url="/docs/faq">\u5E38\u89C1\u95EE\u9898</a></p></blockquote><p>3\u3001\u8FD0\u884C\u9879\u76EE</p><pre class="hljs language-bash"><code>ng serve</code></pre><h2 id="\u5982\u4F55\u5347\u7EA7"><a class="lake-link"><i data-anchor="\u5982\u4F55\u5347\u7EA7"></i></a>\u5982\u4F55\u5347\u7EA7</h2><p>\u5EFA\u8BAE Star \u6216 Watch <a target="_blank" href="https://github.com/ng-alain/ng-alain" data-url="https://github.com/ng-alain/ng-alain">\u6E90\u4EE3\u7801</a>\u4ED3\u5E93\uFF0C\u6709\u52A9\u4E8E\u4F60\u66F4\u597D\u7684\u5728\u7B2C\u4E00\u65F6\u95F4\u4E86\u89E3\u53D8\u66F4\u7EC6\u8282\u3002</p><p>\u9664DEMO\u793A\u4F8B\u9875\u4EE5\u5916\uFF0C\u4F1A\u6709\u4E00\u4E9B\u5F71\u54CD\u5916\uFF0C\u5BF9\u4E8E\u5927\u7248\u672C\u4F1A\u63D0\u4F9B <code>ng update</code> \u6765\u89E3\u51B3\u7834\u574F\u6027\u53D8\u66F4\uFF0C\u5BF9\u4E8E\u5176\u4ED6\u60C5\u51B5\u7684\u5347\u7EA7\u8BF7\u53C2\u8003 <a href="/docs/upgrade" data-url="/docs/upgrade">\u5347\u7EA7\u811A\u624B\u67B6</a>\u3002</p></section>`,meta:{order:1,title:"\u5F00\u59CB\u4F7F\u7528",type:"Documents"},toc:[{id:"\u5199\u5728\u524D\u9762",title:"\u5199\u5728\u524D\u9762",h:2},{id:"\u5982\u4F55\u4F7F\u7528",title:"\u5982\u4F55\u4F7F\u7528",h:2},{id:"\u5982\u4F55\u5347\u7EA7",title:"\u5982\u4F55\u5347\u7EA7",h:2}]}},demo:!1},this.codes=[]}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=d({type:t,selectors:[["app-cli-getting-started"]],hostVars:2,hostBindings:function(e,a){e&2&&l("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(e,a){e&1&&i(0,"app-docs",0),e&2&&n("codes",a.codes)("item",a.item)},dependencies:[c],encapsulation:2})}}return t})();var f=(()=>{class t{constructor(){this.item={cols:1,urls:{"en-US":"schematics/docs/plugin.en-US.md","zh-CN":"schematics/docs/plugin.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="Foreword"><a class="lake-link"><i data-anchor="Foreword"></i></a>Foreword</h2><p>Plugins are the add and remove of optional features, such as when you don't need code style (although I don't think so), only need to:</p><pre class="hljs language-bash"><code>ng g ng-alain:plugin codeStyle -t=remove</code></pre><p>Or add code style:</p><pre class="hljs language-bash"><code>ng g ng-alain:plugin codeStyle</code></pre><h2 id="Commandformat"><a class="lake-link"><i data-anchor="Commandformat"></i></a>Commandformat</h2><pre class="hljs language-bash"><code>ng g ng-alain:plugin [plugin name] -t=[add | remove]</code></pre><p>The <code>[plugin name]</code> is plugin name, <code>-t</code> supports two values <code>add</code> (default) and <code>remove</code>.</p><h2 id="Listofplugins"><a class="lake-link"><i data-anchor="Listofplugins"></i></a>Listofplugins</h2><h3 id="codeStyle"><a class="lake-link"><i data-anchor="codeStyle"></i></a>codeStyle</h3><p>Code style rules:</p><ul><li><p>Verify typescript with <a target="_blank" href="https://github.com/angular-eslint/angular-eslint" data-url="https://github.com/angular-eslint/angular-eslint">angular-eslint</a></p></li><li><p>Verify less with <a target="_blank" href="https://github.com/stylelint/stylelint" data-url="https://github.com/stylelint/stylelint">stylelint</a></p></li><li><p>Use <a target="_blank" href="https://github.com/prettier/prettier" data-url="https://github.com/prettier/prettier">prettier</a> code formatting</p></li><li><p>Use <a target="_blank" href="https://github.com/typicode/husky" data-url="https://github.com/typicode/husky">husky</a> to code verify and code format when git add</p></li></ul><pre class="hljs language-bash"><code># add
ng g ng-alain:plugin codeStyle
# remove
ng g ng-alain:plugin codeStyle -t=remove</code></pre><h3 id="docker"><a class="lake-link"><i data-anchor="docker"></i></a>docker</h3><p>Support for Docker deployment.</p><pre class="hljs language-bash"><code># add
ng g ng-alain:plugin docker
# remove
ng g ng-alain:plugin docker -t=remove</code></pre><h3 id="defaultLanguage"><a class="lake-link"><i data-anchor="defaultLanguage"></i></a>defaultLanguage</h3><p>Change the current default language, refer to: <a href="/docs/i18n#\u9ED8\u8BA4\u8BED\u8A00" data-url="/docs/i18n#\u9ED8\u8BA4\u8BED\u8A00">I18n - Default Language</a></p><pre class="hljs language-bash"><code># change to [en]
ng g ng-alain:plugin defaultLanguage --defaultLanguage=en
# change to [zh]
ng g ng-alain:plugin defaultLanguage --defaultLanguage=zh
# change to [zh-tw]
ng g ng-alain:plugin defaultLanguage --defaultLanguage=zh-tw</code></pre><h4 id="Supportedlanguagelist"><a class="lake-link"><i data-anchor="Supportedlanguagelist"></i></a>Supportedlanguagelist</h4><table><thead><tr><th>Name</th><th>Language pack name</th><th><a target="_blank" href="https://github.com/angular/angular/tree/master/packages/common/locales" data-url="https://github.com/angular/angular/tree/master/packages/common/locales">Angular</a> pack</th><th><a target="_blank" href="http://ng.ant.design/docs/i18n/zh#%E6%94%AF%E6%8C%81%E8%AF%AD%E8%A8%80" data-url="http://ng.ant.design/docs/i18n/zh#%E6%94%AF%E6%8C%81%E8%AF%AD%E8%A8%80">Zorro</a> pack</th><th><a href="/theme/locale" data-url="/theme/locale">Delon</a> pack</th></tr></thead><tbody><tr><td>Simplified Chinese</td><td>zh-Hans,zh-cn,zh-Hans-CN,zh</td><td>zh-Hans,zh-cn,zh-Hans-CN,zh</td><td>zh_CN</td><td>zh_CN</td></tr><tr><td>Traditional Chinese</td><td>zh-Hant,zh-tw,zh-Hant-TW</td><td>zh-Hant,zh-tw,zh-Hant-TW</td><td>zh_TW</td><td>zh_TW</td></tr><tr><td>English (American)</td><td>en</td><td>en</td><td>en_US</td><td>en_US</td></tr><tr><td>Turkish</td><td>tr</td><td>tr</td><td>tr_TR</td><td>tr_TR</td></tr><tr><td>Polish</td><td>pl</td><td>pl</td><td>pl_PL</td><td>pl_PL</td></tr><tr><td>Greek</td><td>el</td><td>el</td><td>el_GR</td><td>el_GR</td></tr><tr><td>Korean</td><td>ko</td><td>ko</td><td>ko_KR</td><td>ko_KR</td></tr><tr><td>Croatian</td><td>hr</td><td>hr</td><td>hr_HR</td><td>hr_HR</td></tr><tr><td>Slovenian</td><td>sl</td><td>sl</td><td>sl_SI</td><td>sl_SI</td></tr><tr><td>French</td><td>fr</td><td>fr</td><td>fr_FR</td><td>fr_FR</td></tr><tr><td>Spanish</td><td>es</td><td>es</td><td>es_ES</td><td>es_ES</td></tr><tr><td>Italian</td><td>it</td><td>it</td><td>it_IT</td><td>it_IT</td></tr><tr><td>Vietnamese</td><td>vi</td><td>vi</td><td>vi_VI</td><td>vi_VI</td></tr><tr><td>Arabic</td><td>ar</td><td>ar</td><td>ar_EG</td><td>ar_SA</td></tr></tbody></table><h3 id="sts"><a class="lake-link"><i data-anchor="sts"></i></a>sts</h3><p><a target="_blank" href="https://github.com/ng-alain/sts" data-url="https://github.com/ng-alain/sts">ng-alain-sts</a> Plugins, Build Swagger APIs to list, edit pages, You can finish some interesting things.</p><pre class="hljs language-bash"><code># add
ng g ng-alain:plugin sts
# remove
ng g ng-alain:plugin sts -t=remove</code></pre><h3 id="icon"><a class="lake-link"><i data-anchor="icon"></i></a>icon</h3><p>From the project to analyze and generate static load Icon, The plugin will automatically generate two files in the <code>src</code> directory:</p><ul><li><p><code>src/style-icons.ts</code> Custom Icon (e.g: remote menu icon)</p></li><li><p><code>src/style-icons-auto.ts</code> command automatically generates files</p></li></ul><blockquote><p>Automatically exclude <a target="_blank" href="https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/icon/nz-icon.service.ts#L6" data-url="https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/icon/nz-icon.service.ts#L6">ng-zorro-antd</a> and <a target="_blank" href="https://github.com/ng-alain/delon/blob/master/packages/theme/src/theme.module.ts#L33" data-url="https://github.com/ng-alain/delon/blob/master/packages/theme/src/theme.module.ts#L33">@delon</a> already loaded icons.</p></blockquote><pre class="hljs language-bash"><code>ng g ng-alain:plugin icon</code></pre><p>Also, you need to manually import in <code>startup.service.ts</code>:</p><pre class="hljs language-ts"><code>import { ICONS_AUTO } from '../../../style-icons-auto';
import { ICONS } from '../../../style-icons';

@Injectable()
export class StartupService {
  constructor(iconSrv: NzIconService) {
    iconSrv.addIcon(...ICONS_AUTO, ...ICONS);
  }
}</code></pre><p><strong>Valid Grammar</strong></p><pre class="hljs language-html"><code>&lt;i class="anticon anticon-user"&gt;&lt;/i&gt;
&lt;i class="anticon anticon-question-circle-o"&gt;&lt;/i&gt;
&lt;i class="anticon anticon-spin anticon-loading"&gt;&lt;/i&gt;
&lt;i nz-icon class="anticon anticon-user"&gt;&lt;/i&gt;
&lt;i nz-icon nzType="align-{{type ? 'left' : 'right'}}"&gt;&lt;/i&gt;
&lt;i nz-icon [type]="type ? 'menu-fold' : 'menu-unfold'" [theme]="theme ? 'outline' : 'fill'"&gt;&lt;/i&gt;
&lt;i nz-icon [type]="type ? 'fullscreen' : 'fullscreen-exit'"&gt;&lt;/i&gt;
&lt;i nz-icon [nzType]="d.status === 'NORMAL' ? 'close1' : 'close2'"&gt;&lt;/i&gt;
&lt;i nz-icon nzType="{{ type ? 'arrow-left' : 'arrow-right' }}"&gt;&lt;/i&gt;
&lt;i nz-icon nzType="filter" theme="outline"&gt;&lt;/i&gt;
&lt;nz-input-group [nzAddOnBeforeIcon]="focus ? 'anticon anticon-arrow-down' : 'anticon anticon-search'"&gt;&lt;/nz-input-group&gt;</code></pre><h3 id="rtl"><a class="lake-link"><i data-anchor="rtl"></i></a>rtl</h3><p>Support RTL plug-in, the text direction is set to "from right to left".</p><pre class="hljs language-bash"><code>ng g ng-alain:plugin rtl</code></pre><blockquote><p>The plug-in does not support hot swap, if you need to remove it, please handle it manually.</p></blockquote></section>`,meta:{order:30,title:"Pluggable plugin",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Commandformat",title:"Command format",h:2},{id:"Listofplugins",title:"List of plugins",h:2,children:[{id:"codeStyle",title:"codeStyle",h:3},{id:"docker",title:"docker",h:3},{id:"defaultLanguage",title:"defaultLanguage",h:3},{id:"sts",title:"sts",h:3},{id:"icon",title:"icon",h:3},{id:"rtl",title:"rtl",h:3}]}]},"zh-CN":{content:`<section class="markdown"><h2 id="\u5199\u5728\u524D\u9762"><a class="lake-link"><i data-anchor="\u5199\u5728\u524D\u9762"></i></a>\u5199\u5728\u524D\u9762</h2><p>\u63D2\u4EF6\u4E3B\u8981\u662F\u9488\u5BF9\u9879\u76EE\u4E00\u4E9B\u989D\u5916 <strong>\u53EF\u9009</strong> \u884C\u4E3A\u7684\u6DFB\u52A0\u6216\u79FB\u9664\uFF0C\u4F8B\u5982\u5F53\u4F60\u89C9\u5F97\u4EE3\u7801\u98CE\u683C\u5BF9\u4F60\u6765\u8BF4\u610F\u4E49\u4E0D\u5927\uFF08\u867D\u7136\u6211\u4E0D\u8FD9\u4E48\u770B\uFF09\uFF0C\u53EA\u9700\u8981\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:plugin codeStyle -t=remove</code></pre><p>\u53C8\u6216\u8005\u5E0C\u671B\u9879\u76EE\u5E94\u8BE5\u6709\u4E00\u4E2A\u7EDF\u4E00\u98CE\u683C\u65F6\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:plugin codeStyle</code></pre><h2 id="\u547D\u4EE4\u683C\u5F0F"><a class="lake-link"><i data-anchor="\u547D\u4EE4\u683C\u5F0F"></i></a>\u547D\u4EE4\u683C\u5F0F</h2><pre class="hljs language-bash"><code>ng g ng-alain:plugin [plugin name] -t=[add | remove]</code></pre><p>\u5176\u4E2D <code>[plugin name]</code> \u63D2\u4EF6\u540D\u79F0\uFF0C\u4ECE\u63D2\u4EF6\u5217\u8868\u4E2D\u83B7\u53D6\uFF0C<code>-t</code> \u652F\u6301\u4E24\u79CD\u503C <code>add</code>\uFF08\u9ED8\u8BA4\uFF09 \u548C <code>remove</code>\u3002</p><h2 id="\u63D2\u4EF6\u5217\u8868"><a class="lake-link"><i data-anchor="\u63D2\u4EF6\u5217\u8868"></i></a>\u63D2\u4EF6\u5217\u8868</h2><h3 id="codeStyle"><a class="lake-link"><i data-anchor="codeStyle"></i></a>codeStyle</h3><p>\u4EE3\u7801\u98CE\u683C\uFF0C\u6709\u51E0\u4E2A\u89C4\u5219\uFF1A</p><ul><li><p>\u4F7F\u7528 <a target="_blank" href="https://github.com/angular-eslint/angular-eslint" data-url="https://github.com/angular-eslint/angular-eslint">angular-eslint</a> \u6821\u9A8C typescript \u90E8\u5206</p></li><li><p>\u4F7F\u7528 <a target="_blank" href="https://github.com/stylelint/stylelint" data-url="https://github.com/stylelint/stylelint">stylelint</a> \u6821\u9A8C less \u90E8\u5206</p></li><li><p>\u4F7F\u7528 <a target="_blank" href="https://github.com/prettier/prettier" data-url="https://github.com/prettier/prettier">prettier</a> \u4EE3\u7801\u683C\u5F0F\u5316</p></li><li><p>\u4F7F\u7528 <a target="_blank" href="https://github.com/typicode/husky" data-url="https://github.com/typicode/husky">husky</a> \u5728\u4F60\u63D0\u4EA4\u4EE3\u7801\u65F6\u8FDB\u884C\u4EE3\u7801\u6821\u9A8C\u548C\u683C\u5F0F\u5316</p></li></ul><p>ng-alain \u9ED8\u8BA4\u63D0\u4F9B\u4E86\u4E00\u90E8\u5206\u7684\u4EE3\u7801\u98CE\u683C\u914D\u7F6E\u65B9\u6848\uFF0C\u4F60\u53EF\u4EE5\u5728\u9879\u76EE\u7684\u6839\u76EE\u5F55\u4E0B\u627E\u5230\u8FD9\u4E9B\u914D\u7F6E\u4FE1\u606F\uFF0C\u4F9D\u7167\u4F60\u81EA\u5DF1\u7684\u98CE\u683C\u8FDB\u884C\u4FEE\u9970\u3002</p><pre class="hljs language-bash"><code># add
ng g ng-alain:plugin codeStyle
# remove
ng g ng-alain:plugin codeStyle -t=remove</code></pre><h3 id="docker"><a class="lake-link"><i data-anchor="docker"></i></a>docker</h3><p>\u652F\u6301 Docker \u90E8\u7F72\u3002</p><pre class="hljs language-bash"><code># add
ng g ng-alain:plugin docker
# remove
ng g ng-alain:plugin docker -t=remove</code></pre><h3 id="defaultLanguage"><a class="lake-link"><i data-anchor="defaultLanguage"></i></a>defaultLanguage</h3><p>\u53D8\u66F4\u5F53\u524D\u9ED8\u8BA4\u8BED\u8A00\uFF0C\u53C2\u8003\uFF1A<a href="/docs/i18n#\u9ED8\u8BA4\u8BED\u8A00" data-url="/docs/i18n#\u9ED8\u8BA4\u8BED\u8A00">\u56FD\u9645\u5316-\u9ED8\u8BA4\u8BED\u8A00</a></p><pre class="hljs language-bash"><code># change to [en]
ng g ng-alain:plugin defaultLanguage --defaultLanguage=en
# change to [zh]
ng g ng-alain:plugin defaultLanguage --defaultLanguage=zh
# change to [zh-tw]
ng g ng-alain:plugin defaultLanguage --defaultLanguage=zh-tw</code></pre><h4 id="\u652F\u6301\u8BED\u8A00\u5217\u8868"><a class="lake-link"><i data-anchor="\u652F\u6301\u8BED\u8A00\u5217\u8868"></i></a>\u652F\u6301\u8BED\u8A00\u5217\u8868</h4><table><thead><tr><th>\u540D\u79F0</th><th>\u8BED\u8A00\u5305\u540D\u79F0</th><th>\u5BF9\u5E94 <a target="_blank" href="https://github.com/angular/angular/tree/master/packages/common/locales" data-url="https://github.com/angular/angular/tree/master/packages/common/locales">Angular</a> \u8BED\u8A00\u5305</th><th>\u5BF9\u5E94 <a target="_blank" href="http://ng.ant.design/docs/i18n/zh#%E6%94%AF%E6%8C%81%E8%AF%AD%E8%A8%80" data-url="http://ng.ant.design/docs/i18n/zh#%E6%94%AF%E6%8C%81%E8%AF%AD%E8%A8%80">Zorro</a> \u8BED\u8A00\u5305</th><th>\u5BF9\u5E94 <a href="/theme/locale" data-url="/theme/locale">Delon</a> \u8BED\u8A00\u5305</th></tr></thead><tbody><tr><td>\u7B80\u4F53\u4E2D\u6587</td><td>zh-Hans,zh-cn,zh-Hans-CN,zh</td><td>zh-Hans,zh-cn,zh-Hans-CN,zh</td><td>zh_CN</td><td>zh_CN</td></tr><tr><td>\u7E41\u4F53\u4E2D\u6587</td><td>zh-Hant,zh-tw,zh-Hant-TW</td><td>zh-Hant,zh-tw,zh-Hant-TW</td><td>zh_TW</td><td>zh_TW</td></tr><tr><td>\u82F1\u8BED\uFF08\u7F8E\u5F0F\uFF09</td><td>en</td><td>en</td><td>en_US</td><td>en_US</td></tr><tr><td>\u571F\u8033\u5176\u8BED</td><td>tr</td><td>tr</td><td>tr_TR</td><td>tr_TR</td></tr><tr><td>\u6CE2\u5170\u8BED</td><td>pl</td><td>pl</td><td>pl_PL</td><td>pl_PL</td></tr><tr><td>\u5E0C\u814A\u8BED</td><td>el</td><td>el</td><td>el_GR</td><td>el_GR</td></tr><tr><td>\u671D\u9C9C\u8BED</td><td>ko</td><td>ko</td><td>ko_KR</td><td>ko_KR</td></tr><tr><td>\u514B\u7F57\u5730\u4E9A</td><td>hr</td><td>hr</td><td>hr_HR</td><td>hr_HR</td></tr><tr><td>\u65AF\u6D1B\u6587\u5C3C\u4E9A\u6587</td><td>sl</td><td>sl</td><td>sl_SI</td><td>sl_SI</td></tr><tr><td>\u6CD5\u6587</td><td>fr</td><td>fr</td><td>fr_FR</td><td>fr_FR</td></tr><tr><td>\u897F\u73ED\u7259\u8BED</td><td>es</td><td>es</td><td>es_ES</td><td>es_ES</td></tr><tr><td>\u610F\u5927\u5229\u8BED</td><td>it</td><td>it</td><td>it_IT</td><td>it_IT</td></tr><tr><td>\u963F\u62C9\u4F2F\u8BED</td><td>ar</td><td>ar</td><td>ar_EG</td><td>ar_SA</td></tr></tbody></table><h3 id="sts"><a class="lake-link"><i data-anchor="sts"></i></a>sts</h3><p><a target="_blank" href="https://github.com/ng-alain/sts" data-url="https://github.com/ng-alain/sts">ng-alain-sts</a> \u63D2\u4EF6\uFF0C\u6784\u5EFA Swagger API \u8F6C\u6362\u4E3A\u5217\u8868\u3001\u7F16\u8F91\u9875\uFF0C\u66F4\u591A\u6709\u8DA3\u7684\u73A9\u6CD5\u8BF7\u81EA\u884C\u60F3\u8C61\u3002</p><pre class="hljs language-bash"><code># add
ng g ng-alain:plugin sts
# remove
ng g ng-alain:plugin sts -t=remove</code></pre><h3 id="icon"><a class="lake-link"><i data-anchor="icon"></i></a>icon</h3><p><strong>\u5C3D\u53EF\u80FD</strong>\u4ECE\u9879\u76EE\u4E2D\u5206\u6790\u5E76\u751F\u6210\u9759\u6001 Icon\uFF0C\u63D2\u4EF6\u4F1A\u81EA\u52A8\u5728 <code>src</code> \u76EE\u5F55\u4E0B\u751F\u6210\u4E24\u4E2A\u6587\u4EF6\uFF1A</p><ul><li><p><code>src/style-icons.ts</code> \u81EA\u5B9A\u4E49\u90E8\u5206\u65E0\u6CD5\u89E3\u6790\uFF08\u4F8B\u5982\uFF1A\u8FDC\u7A0B\u83DC\u5355\u56FE\u6807\uFF09</p></li><li><p><code>src/style-icons-auto.ts</code> \u547D\u4EE4\u81EA\u52A8\u751F\u6210\u6587\u4EF6</p></li></ul><blockquote><p>\u81EA\u52A8\u6392\u9664 <a target="_blank" href="https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/icon/nz-icon.service.ts#L6" data-url="https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/components/icon/nz-icon.service.ts#L6">ng-zorro-antd</a> \u548C <a target="_blank" href="https://github.com/ng-alain/delon/blob/master/packages/theme/src/theme.module.ts#L33" data-url="https://github.com/ng-alain/delon/blob/master/packages/theme/src/theme.module.ts#L33">@delon</a> \u5DF2\u7ECF\u52A0\u8F7D\u7684\u56FE\u6807\u3002</p></blockquote><pre class="hljs language-bash"><code>ng g ng-alain:plugin icon</code></pre><p>\u540C\u65F6\uFF0C\u9700\u8981\u624B\u52A8\u5728 <code>startup.service.ts</code> \u4E2D\u5BFC\u5165\uFF1A</p><pre class="hljs language-ts"><code>import { ICONS_AUTO } from '../../../style-icons-auto';
import { ICONS } from '../../../style-icons';

@Injectable()
export class StartupService {
  constructor(iconSrv: NzIconService) {
    iconSrv.addIcon(...ICONS_AUTO, ...ICONS);
  }
}</code></pre><p><strong>\u6709\u6548\u8BED\u6CD5</strong></p><pre class="hljs language-html"><code>&lt;i class="anticon anticon-user"&gt;&lt;/i&gt;
&lt;i class="anticon anticon-question-circle-o"&gt;&lt;/i&gt;
&lt;i class="anticon anticon-spin anticon-loading"&gt;&lt;/i&gt;
&lt;i nz-icon class="anticon anticon-user"&gt;&lt;/i&gt;
&lt;i nz-icon nzType="align-{{type ? 'left' : 'right'}}"&gt;&lt;/i&gt;
&lt;i nz-icon [type]="type ? 'menu-fold' : 'menu-unfold'" [theme]="theme ? 'outline' : 'fill'"&gt;&lt;/i&gt;
&lt;i nz-icon [type]="type ? 'fullscreen' : 'fullscreen-exit'"&gt;&lt;/i&gt;
&lt;i nz-icon [nzType]="d.status === 'NORMAL' ? 'close1' : 'close2'"&gt;&lt;/i&gt;
&lt;i nz-icon nzType="{{ type ? 'arrow-left' : 'arrow-right' }}"&gt;&lt;/i&gt;
&lt;i nz-icon nzType="filter" theme="outline"&gt;&lt;/i&gt;
&lt;nz-input-group [nzAddOnBeforeIcon]="focus ? 'anticon anticon-arrow-down' : 'anticon anticon-search'"&gt;&lt;/nz-input-group&gt;</code></pre><h3 id="rtl"><a class="lake-link"><i data-anchor="rtl"></i></a>rtl</h3><p>\u652F\u6301 RTL \u63D2\u4EF6\uFF0C\u5373\u6587\u672C\u65B9\u5411\u8BBE\u7F6E\u4E3A\u201C\u4ECE\u53F3\u5411\u5DE6\u201D\u3002</p><pre class="hljs language-bash"><code>ng g ng-alain:plugin rtl</code></pre><blockquote><p>\u8BE5\u63D2\u4EF6\u4E0D\u652F\u6301\u79FB\u9664\u529F\u80FD\uFF0C\u9700\u8981\u81EA\u884C\u624B\u52A8\u79FB\u9664\u76F8\u5173\u4EE3\u7801\u3002</p></blockquote></section>`,meta:{order:30,title:"\u63D2\u4EF6",type:"Documents"},toc:[{id:"\u5199\u5728\u524D\u9762",title:"\u5199\u5728\u524D\u9762",h:2},{id:"\u547D\u4EE4\u683C\u5F0F",title:"\u547D\u4EE4\u683C\u5F0F",h:2},{id:"\u63D2\u4EF6\u5217\u8868",title:"\u63D2\u4EF6\u5217\u8868",h:2,children:[{id:"codeStyle",title:"codeStyle",h:3},{id:"docker",title:"docker",h:3},{id:"defaultLanguage",title:"defaultLanguage",h:3},{id:"sts",title:"sts",h:3},{id:"icon",title:"icon",h:3},{id:"rtl",title:"rtl",h:3}]}]}},demo:!1},this.codes=[]}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=d({type:t,selectors:[["app-cli-plugin"]],hostVars:2,hostBindings:function(e,a){e&2&&l("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(e,a){e&1&&i(0,"app-docs",0),e&2&&n("codes",a.codes)("item",a.item)},dependencies:[c],encapsulation:2})}}return t})();var b=(()=>{class t{constructor(){this.item={cols:1,urls:{"en-US":"schematics/docs/sta.en-US.md","zh-CN":"schematics/docs/sta.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="Foreword"><a class="lake-link"><i data-anchor="Foreword"></i></a>Foreword</h2><p>If the back-end API documentation is described by Swagger, a complete set of API codes can be generated through the following commands:</p><pre class="hljs language-bash"><code>ng g ng-alain:sta --url=https://petstore3.swagger.io/api/v3/openapi.json </code></pre><h2 id="Commandformat"><a class="lake-link"><i data-anchor="Commandformat"></i></a>Commandformat</h2><pre class="hljs language-bash"><code>ng g ng-alain:sta --name=&lt;Swagger name> --url=<Remote URL> --filePath=<Local Swagger.json> --output=<Path to folder></code></pre><table><thead><tr><th>Name</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td><code>sta</code></td><td>Name for swagger project name</td></tr><tr><td><code>url</code></td><td>-</td><td>URL to swagger schema, Choose one of filePath and url.</td></tr><tr><td><code>filePath</code></td><td>-</td><td>Path to swagger schema, Choose one of filePath and url.</td></tr><tr><td><code>output</code></td><td><code>src/app/\${name}</code></td><td>Path to folder where will been located the created api module</td></tr><tr><td><code>responseDataField</code></td><td>-</td><td>The real data field of Response</td></tr><tr><td><code>modelTypePrefix</code></td><td>-</td><td>Model name prefix</td></tr><tr><td><code>httpClientType</code></td><td><code>delon</code></td><td>HttpClient request method, 1. <code>delon</code> use <code>_HttpClient</code> of <code>@delon/theme</code>, 2. <code>angular</code> use <code>HttpClient</code></td></tr><tr><td><code>generateApiOptions</code></td><td>-</td><td>swagger-typescript-api <a target="_blank" href="https://github.com/acacode/swagger-typescript-api#-usage" data-url="https://github.com/acacode/swagger-typescript-api#-usage">options</a></td></tr><tr><td><code>tagsMapping</code></td><td>-</td><td>Swagger tag mapping dictionary</td></tr></tbody></table><h2 id="Useconfigfile"><a class="lake-link"><i data-anchor="Useconfigfile"></i></a>Useconfigfile</h2><p>Add <code>sta.json</code> to the project root directory:</p><pre class="hljs language-json"><code>{
  "$schema": "./node_modules/ng-alain/sta/schema.json",
  "filePath": "swagger.json",
  "tagsMapping": {
    "\u90E8\u95E8": "Dept"
  }
}</code></pre><p>Run:</p><pre class="hljs language-bash"><code>ng g ng-alain:sta</code></pre><h2 id="FAQ"><a class="lake-link"><i data-anchor="FAQ"></i></a>FAQ</h2><h3 id="PathandServiceAssociation"><a class="lake-link"><i data-anchor="PathandServiceAssociation"></i></a>PathandServiceAssociation</h3><p>By default, the first <code>tags</code> of each <code>path</code> will be merged into one Service. Please use <code>[a-zA-Z][-_a-zA-Z]+</code> to describe <code>tag</code> as much as possible.</p><h3 id="Unexpectedname"><a class="lake-link"><i data-anchor="Unexpectedname"></i></a>Unexpectedname</h3><p>By default, it will be processed according to the <code>operationId</code> item, otherwise it will be automatically combined according to the <code>path</code> and <code>method</code>. A few ways to turn on the languages:</p><p><strong>.NET CORE</strong></p><pre class="hljs language-cs"><code>// Swashbuckle
services.AddSwaggerGen(c =>
{
  c.CustomOperationIds(e =>
  {
    var name = e.ActionDescriptor.RouteValues["action"] ?? "";
    return name[0].ToString().ToLower() + name.Substring(1);
  });
}</code></pre><p><strong>JAVA</strong></p><p>Please refer to <a target="_blank" href="https://springfox.github.io/springfox/docs/snapshot/#configuring-the-output-of-operationid-in-a-swagger-2-0-spec" data-url="https://springfox.github.io/springfox/docs/snapshot/#configuring-the-output-of-operationid-in-a-swagger-2-0-spec">Configuring the output of operationId in a Swagger 2.0 spec</a>.</p><h3 id="GlobalResponse"><a class="lake-link"><i data-anchor="GlobalResponse"></i></a>GlobalResponse</h3><p>When all <code>path</code>s have a fixed output format, such as success and exceptions have a unified format, they all return:</p><pre class="hljs language-json"><code>{
   "status": 200,
   "error": "Error Message",
   "result": {}
}</code></pre><p>If an interceptor is used to handle exception messages, when subscribing only needs to always get the data of the <code>result</code> field, it can be solved by specifying <code>--responseDataField="result"</code>.</p></section>`,meta:{order:40,title:"sta",subtitle:"Swagger API generator",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Commandformat",title:"Command format",h:2},{id:"Useconfigfile",title:"Use config file",h:2},{id:"FAQ",title:"FAQ",h:2,children:[{id:"PathandServiceAssociation",title:"Path and Service Association",h:3},{id:"Unexpectedname",title:"Unexpected name",h:3},{id:"GlobalResponse",title:"Global Response",h:3}]}]},"zh-CN":{content:`<section class="markdown"><h2 id="\u5199\u5728\u524D\u9762"><a class="lake-link"><i data-anchor="\u5199\u5728\u524D\u9762"></i></a>\u5199\u5728\u524D\u9762</h2><p>\u82E5\u540E\u7AEFAPI\u6587\u6863\u662F\u7531 Swagger \u6765\u63CF\u8FF0\uFF0C\u5C06\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u547D\u4EE4\u6765\u751F\u6210\u4E00\u7EC4\u5B8C\u6574\u7684 API \u4EE3\u7801\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:sta --url=https://petstore3.swagger.io/api/v3/openapi.json </code></pre><h2 id="\u547D\u4EE4\u683C\u5F0F"><a class="lake-link"><i data-anchor="\u547D\u4EE4\u683C\u5F0F"></i></a>\u547D\u4EE4\u683C\u5F0F</h2><pre class="hljs language-bash"><code>ng g ng-alain:sta --name=&lt;Swagger name> --url=<\u8FDC\u7A0BURL\u5730\u5740> --filePath=<\u672C\u5730Swagger.json\u6587\u4EF6> --output=<\u8F93\u51FA\u8DEF\u5F84></code></pre><table><thead><tr><th>\u53C2\u6570\u540D</th><th>\u9ED8\u8BA4</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td><code>name</code></td><td><code>sta</code></td><td>Swagger \u9879\u76EE\u540D\u79F0</td></tr><tr><td><code>url</code></td><td>-</td><td>\u8FDC\u7A0B Swagger.json \u6587\u4EF6\uFF0C<code>url</code> \u4E0E <code>filePath</code> \u5FC5\u987B\u4E8C\u9009\u4E00</td></tr><tr><td><code>filePath</code></td><td>-</td><td>\u672C\u5730 Swagger.json \u6587\u4EF6\u8DEF\u5F84\uFF0C<code>url</code> \u4E0E <code>filePath</code> \u5FC5\u987B\u4E8C\u9009\u4E00</td></tr><tr><td><code>output</code></td><td><code>src/app/\${name}</code></td><td>\u8F93\u51FA\u76EE\u5F55</td></tr><tr><td><code>responseDataField</code></td><td>-</td><td>Response \u7684\u771F\u5B9E\u6570\u636E\u5B57\u6BB5</td></tr><tr><td><code>modelTypePrefix</code></td><td>-</td><td>\u6570\u636E\u5951\u7EA6\u540D\u79F0\u524D\u7F00</td></tr><tr><td><code>httpClientType</code></td><td><code>delon</code></td><td>HttpClient \u8BF7\u6C42\u65B9\u5F0F\uFF0C1. <code>delon</code> \u4F7F\u7528 <code>@delon/theme</code> \u7684 <code>_HttpClient</code>\uFF0C2. <code>angular</code> \u4F7F\u7528 <code>HttpClient</code></td></tr><tr><td><code>generateApiOptions</code></td><td>-</td><td>swagger-typescript-api <a target="_blank" href="https://github.com/acacode/swagger-typescript-api#-usage" data-url="https://github.com/acacode/swagger-typescript-api#-usage">options</a></td></tr><tr><td><code>tagsMapping</code></td><td>-</td><td>Swagger\u6807\u7B7E\u6620\u5C04\u5B57\u5178\uFF0C\u5F53\u6807\u7B7E\u4E3A\u4E2D\u6587\u65F6\uFF0C\u53EF\u4EE5\u6307\u5B9A\u7528\u4E8E\u8F6C\u6362\u6210\u66F4\u52A0\u7B26\u5408\u89C4\u8303 Service \u540D</td></tr></tbody></table><h2 id="\u4F7F\u7528\u914D\u7F6E\u6587\u4EF6"><a class="lake-link"><i data-anchor="\u4F7F\u7528\u914D\u7F6E\u6587\u4EF6"></i></a>\u4F7F\u7528\u914D\u7F6E\u6587\u4EF6</h2><p>\u5728\u9879\u76EE\u6839\u76EE\u5F55\u589E\u52A0 <code>sta.json</code>\uFF1A</p><pre class="hljs language-json"><code>{
  "$schema": "./node_modules/ng-alain/sta/schema.json",
  "filePath": "swagger.json",
  "tagsMapping": {
    "\u90E8\u95E8": "Dept"
  }
}</code></pre><p>\u6267\u884C\uFF1A</p><pre class="hljs language-bash"><code>ng g ng-alain:sta</code></pre><h2 id="\u5E38\u89C1\u95EE\u9898"><a class="lake-link"><i data-anchor="\u5E38\u89C1\u95EE\u9898"></i></a>\u5E38\u89C1\u95EE\u9898</h2><h3 id="\u8DEF\u5F84\u4E0EService\u7684\u5173\u8054"><a class="lake-link"><i data-anchor="\u8DEF\u5F84\u4E0EService\u7684\u5173\u8054"></i></a>\u8DEF\u5F84\u4E0EService\u7684\u5173\u8054</h3><p>\u9ED8\u8BA4\u4F1A\u5C06\u6BCF\u4E2A <code>path</code> \u7B2C\u4E00\u4E2A <code>tags</code> \u5408\u5E76\u4E3A\u4E00\u4E2A Service\uFF0C\u8BF7\u5C3D\u53EF\u80FD\u4F7F\u7528 <code>[a-zA-Z][-_a-zA-Z]+</code> \u6765\u63CF\u8FF0 <code>tag</code>\u3002</p><h3 id="\u4E0D\u7B26\u5408\u9884\u671F\u7684\u540D\u79F0"><a class="lake-link"><i data-anchor="\u4E0D\u7B26\u5408\u9884\u671F\u7684\u540D\u79F0"></i></a>\u4E0D\u7B26\u5408\u9884\u671F\u7684\u540D\u79F0</h3><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u4F1A\u6839\u636E <code>operationId</code> \u9879\u76EE\u6765\u5904\u7406\uFF0C\u5426\u5219\u4F1A\u81EA\u52A8\u6839\u636E <code>path</code> \u4E0E <code>method</code> \u7EC4\u5408\u3002\u4E3A\u4E86\u4FDD\u6301\u4E0E\u540E\u7AEF\u7684\u7EDF\u4E00\u9879\uFF0C\u5EFA\u8BAE\u5F00\u542F <code>operationId</code> \u652F\u6301\uFF0C\u4EE5\u4E0B\u662F\u51E0\u79CD\u8BED\u8A00\u5F00\u542F\u65B9\u6CD5\uFF1A</p><p><strong>.NET CORE</strong></p><pre class="hljs language-cs"><code>// Swashbuckle
services.AddSwaggerGen(c =>
{
  c.CustomOperationIds(e =>
  {
    var name = e.ActionDescriptor.RouteValues["action"] ?? "";
    return name[0].ToString().ToLower() + name.Substring(1);
  });
}</code></pre><p><strong>JAVA</strong></p><p>\u53C2\u8003 <a target="_blank" href="https://springfox.github.io/springfox/docs/snapshot/#configuring-the-output-of-operationid-in-a-swagger-2-0-spec" data-url="https://springfox.github.io/springfox/docs/snapshot/#configuring-the-output-of-operationid-in-a-swagger-2-0-spec">Configuring the output of operationId in a Swagger 2.0 spec</a>.</p><h3 id="\u5168\u5C40Response"><a class="lake-link"><i data-anchor="\u5168\u5C40Response"></i></a>\u5168\u5C40Response</h3><p>\u5F53\u6240\u6709 <code>path</code> \u6709\u56FA\u5B9A\u8F93\u51FA\u683C\u5F0F\u65F6\uFF0C\u6BD4\u5982\u6210\u529F\u3001\u5F02\u5E38\u90FD\u6709\u7EDF\u4E00\u683C\u5F0F\u65F6\u90FD\u8FD4\u56DE\u65F6\uFF1A</p><pre class="hljs language-json"><code>{
  "status": 200,
  "error": "Error Message",
  "result": {}
}</code></pre><p>\u82E5\u662F\u901A\u8FC7\u62E6\u622A\u5668\u6765\u5904\u7406\u5F02\u5E38\u6D88\u606F\u65F6\uFF0C\u8BA2\u9605\u65F6\u53EA\u9700\u8981\u59CB\u7EC8\u83B7\u53D6 <code>result</code> \u5B57\u6BB5\u6570\u636E\u65F6\uFF0C\u53EF\u4EE5\u901A\u8FC7\u6307\u5B9A <code>--responseDataField="result"</code> \u6765\u89E3\u51B3\u3002</p></section>`,meta:{order:40,title:"sta",subtitle:"Swagger API \u751F\u6210\u5668",type:"Documents"},toc:[{id:"\u5199\u5728\u524D\u9762",title:"\u5199\u5728\u524D\u9762",h:2},{id:"\u547D\u4EE4\u683C\u5F0F",title:"\u547D\u4EE4\u683C\u5F0F",h:2},{id:"\u4F7F\u7528\u914D\u7F6E\u6587\u4EF6",title:"\u4F7F\u7528\u914D\u7F6E\u6587\u4EF6",h:2},{id:"\u5E38\u89C1\u95EE\u9898",title:"\u5E38\u89C1\u95EE\u9898",h:2,children:[{id:"\u8DEF\u5F84\u4E0EService\u7684\u5173\u8054",title:"\u8DEF\u5F84\u4E0EService\u7684\u5173\u8054",h:3},{id:"\u4E0D\u7B26\u5408\u9884\u671F\u7684\u540D\u79F0",title:"\u4E0D\u7B26\u5408\u9884\u671F\u7684\u540D\u79F0",h:3},{id:"\u5168\u5C40Response",title:"\u5168\u5C40Response",h:3}]}]}},demo:!1},this.codes=[]}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=d({type:t,selectors:[["app-cli-sta"]],hostVars:2,hostBindings:function(e,a){e&2&&l("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(e,a){e&1&&i(0,"app-docs",0),e&2&&n("codes",a.codes)("item",a.item)},dependencies:[c],encapsulation:2})}}return t})();var q=[{path:"",component:p,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"add",redirectTo:"add/zh",pathMatch:"full"},{path:"add/:lang",component:g},{path:"default",redirectTo:"default/zh",pathMatch:"full"},{path:"default/:lang",component:h},{path:"generate",redirectTo:"generate/zh",pathMatch:"full"},{path:"generate/:lang",component:u},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:m},{path:"plugin",redirectTo:"plugin/zh",pathMatch:"full"},{path:"plugin/:lang",component:f},{path:"sta",redirectTo:"sta/zh",pathMatch:"full"},{path:"sta/:lang",component:b}]}];export{q as routes};
