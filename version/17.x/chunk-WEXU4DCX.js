import{a as l}from"./chunk-OO7Z5XQN.js";import{a as h}from"./chunk-XVODZEZ6.js";import"./chunk-6WIBMPTM.js";import"./chunk-TBZVYH6Z.js";import"./chunk-SCARKHZL.js";import"./chunk-ZY3TDUWQ.js";import"./chunk-HF5TSODR.js";import{Lb as s,Va as c,Xa as n,da as i,jb as r}from"./chunk-OB24VCRC.js";var m=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/docs/getting-started.en-US.md","zh-CN":"packages/util/docs/getting-started.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p><code>@delon/util</code> is a collection of tool functions.</p></section>',meta:{order:1,title:"Getting Started",type:"Documents"},toc:[]},"zh-CN":{content:'<section class="markdown"><p>@delon/util \u662F\u4E00\u7EC4\u65E5\u5E38\u666E\u901A\u4F7F\u7528\u7684\u5DE5\u5177\u51FD\u6570\u7684\u96C6\u5408\u3002</p></section>',meta:{order:1,title:"\u5F00\u59CB\u4F7F\u7528",type:"Documents"},toc:[]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-getting-started"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var u=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/array/index.en-US.md","zh-CN":"packages/util/array/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="ArrayService"><a class="lake-link"><i data-anchor="ArrayService"></i></a>ArrayService</h2><p>Used for conversion and access between arrays and trees. It is generally used with <code>nz-tree</code>.</p><blockquote><p>You can override <span>ArrayService</span> to set the mapping name through <a href="/docs/global-config" data-url="/docs/global-config">Global Configuration</a>.</p></blockquote><h3 id="treeToArr"><a class="lake-link"><i data-anchor="treeToArr"></i></a>treeToArr</h3><p>Convert tree structure to array structure.</p><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>deepMapName</code></td><td>Deep map name</td><td><code>string</code></td><td><code>deep</code></td></tr><tr><td><code>parentMapName</code></td><td>Parent item map name of flat array</td><td><code>string</code></td><td><code>parent</code></td></tr><tr><td><code>childrenMapName</code></td><td>Source data children map name</td><td><code>string</code></td><td><code>children</code></td></tr><tr><td><code>clearChildren</code></td><td>Whether remove <code>children</code> item</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>cb</code></td><td>Callback event</td><td><code>(item: any, parent: any, deep: number) => void</code></td><td>-</td></tr></tbody></table><h3 id="arrToTree"><a class="lake-link"><i data-anchor="arrToTree"></i></a>arrToTree</h3><p>Convert array structure to tree structure.</p><blockquote><p>If <code>parent_id</code> is a string, the root value <strong>Make Sure</strong> is an empty string.</p></blockquote><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>idMapName</code></td><td>Id map name</td><td><code>string</code></td><td><code>id</code></td></tr><tr><td><code>parentIdMapName</code></td><td>Parent id map name</td><td><code>string</code></td><td><code>parent_id</code></td></tr><tr><td><code>rootParentIdValue</code></td><td>Root parent id value, the most suitable root parent id value will be automatically calculated by default</td><td><code>any</code></td><td>-</td></tr><tr><td><code>childrenMapName</code></td><td>Children map name</td><td><code>string</code></td><td><code>children</code></td></tr><tr><td><code>cb</code></td><td>Callback event</td><td><code>(item: any) => void</code></td><td>-</td></tr></tbody></table><h3 id="arrToTreeNode"><a class="lake-link"><i data-anchor="arrToTreeNode"></i></a>arrToTreeNode</h3><p>Convert array structure to <code>nz-tree</code> data structure.</p><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>idMapName</code></td><td>Id map name</td><td><code>string</code></td><td><code>id</code></td></tr><tr><td><code>parentIdMapName</code></td><td>Parent id map name</td><td><code>string</code></td><td><code>parent_id</code></td></tr><tr><td><code>titleMapName</code></td><td>Title map name</td><td><code>string</code></td><td><code>title</code></td></tr><tr><td><code>isLeafMapName</code></td><td>isLeaf map name, if value does not exist, include <code>children</code> value to determine whether it's a leaf node</td><td><code>string</code></td><td><code>isLeaf</code></td></tr><tr><td><code>checkedMapname</code></td><td>Checked map name</td><td><code>string</code></td><td><code>checked</code></td></tr><tr><td><code>selectedMapname</code></td><td>Selected map name</td><td><code>string</code></td><td><code>selected</code></td></tr><tr><td><code>expandedMapname</code></td><td>Expanded map name (Except leaf nodes)</td><td><code>string</code></td><td><code>expanded</code></td></tr><tr><td><code>disabledMapname</code></td><td>Disabled map name</td><td><code>string</code></td><td><code>disabled</code></td></tr><tr><td><code>cb</code></td><td>Callback event</td><td><code>(item: any, parent: any, deep: number) => void</code></td><td>-</td></tr></tbody></table><h3 id="visitTree"><a class="lake-link"><i data-anchor="visitTree"></i></a>visitTree</h3><p>Recursive access tree.</p><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>childrenMapName</code></td><td>Children map name</td><td><code>string</code></td><td><code>children</code></td></tr></tbody></table><h3 id="findTree"><a class="lake-link"><i data-anchor="findTree"></i></a>findTree</h3><p>Return the value of the first tree value in the tree where predicate is true, and <code>undefined</code> otherwise.</p><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>childrenMapName</code></td><td>Children map name</td><td><code>string</code></td><td><code>children</code></td></tr></tbody></table><h3 id="getKeysByTreeNode"><a class="lake-link"><i data-anchor="getKeysByTreeNode"></i></a>getKeysByTreeNode</h3><p>Get all the selected <code>key</code> values.</p><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>includeHalfChecked</code></td><td>Whether include half-checked</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>keyMapName</code></td><td>Whether re-specify <code>key</code> name</td><td><code>string</code></td><td>-</td></tr><tr><td><code>cb</code></td><td>Callback event, return <code>key</code> value</td><td><code>(item: NzTreeNode, parent: NzTreeNode, deep: number) => any</code></td><td>-</td></tr></tbody></table><h3 id="flat"><a class="lake-link"><i data-anchor="flat"></i></a>flat</h3><p>Recursively flattens array.</p><pre class="hljs language-ts"><code>srv.flat([1, [2, 3, [4, 5, [6]]]]) => [1,2,3,4,5,6]
srv.flat([1, [2, 3, [4, 5, [6]]]], 1) => [1,2,3,[4, 5, [6]]]</code></pre><h3 id="groupBy"><a class="lake-link"><i data-anchor="groupBy"></i></a>groupBy</h3><p>Group the array.</p><pre class="hljs language-ts"><code>srv.groupBy([6.1, 4.2, 6.3], Math.floor) => {"4":[4.2],"6":[6.1,6.3]}
srv.groupBy(['one', 'two', 'three'], v => v.length) => {"3":["one","two"],"5":["three"]}</code></pre><h3 id="uniq"><a class="lake-link"><i data-anchor="uniq"></i></a>uniq</h3><p>Creates a duplicate-free version of an array.</p><pre class="hljs language-ts"><code>uniq([1, 2, 2, 3, 1]) => [1,2,3]
uniq([{ a: 1 }, { a: 1 }, { a: 2 }], 'a') => [{"a":1},{"a":2}]
uniq([{ a: 1 }, { a: 1 }, { a: 2 }], i => (i.a === 1 ? 'a' : 'b')) => [{"a":1},{"a":2}]</code></pre></section>`,meta:{title:"array",subtitle:"Array&Tree,flat,groupBy,uniq",type:"Tools"},toc:[{id:"ArrayService",title:"ArrayService",h:2,children:[{id:"treeToArr",title:"treeToArr",h:3},{id:"arrToTree",title:"arrToTree",h:3},{id:"arrToTreeNode",title:"arrToTreeNode",h:3},{id:"visitTree",title:"visitTree",h:3},{id:"findTree",title:"findTree",h:3},{id:"getKeysByTreeNode",title:"getKeysByTreeNode",h:3},{id:"flat",title:"flat",h:3},{id:"groupBy",title:"groupBy",h:3},{id:"uniq",title:"uniq",h:3}]}]},"zh-CN":{content:`<section class="markdown"><h2 id="ArrayService"><a class="lake-link"><i data-anchor="ArrayService"></i></a>ArrayService</h2><p><code><a data-toc="ArrayService">ArrayService</a></code> \u7528\u4E8E\u6570\u7EC4\u4E0E\u6811\u4E4B\u95F4\u7684\u8F6C\u5316\u3001\u8BBF\u95EE\u7B49\uFF0C\u4E00\u822C\u914D\u5408 <code>nz-tree</code> \u4E00\u8D77\u4F7F\u7528\u3002</p><blockquote><p>\u53EF\u4EE5\u901A\u8FC7<a href="/docs/global-config" data-url="/docs/global-config">\u5168\u5C40\u914D\u7F6E</a>\u8986\u76D6 <code>ArrayService</code> \u8BBE\u7F6E\u6620\u5C04\u540D\u79F0\u3002</p></blockquote><h3 id="treeToArr"><a class="lake-link"><i data-anchor="treeToArr"></i></a>treeToArr</h3><p>\u5C06\u6811\u7ED3\u6784\u8F6C\u6362\u6210\u6570\u7EC4\u7ED3\u6784\u3002</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td><code>deepMapName</code></td><td>\u6DF1\u5EA6\u9879\u540D</td><td><code>string</code></td><td><code>deep</code></td></tr><tr><td><code>parentMapName</code></td><td>\u6241\u5E73\u540E\u6570\u7EC4\u7684\u7236\u6570\u636E\u9879\u540D</td><td><code>string</code></td><td><code>parent</code></td></tr><tr><td><code>childrenMapName</code></td><td>\u6E90\u6570\u636E\u5B50\u9879\u540D</td><td><code>string</code></td><td><code>children</code></td></tr><tr><td><code>clearChildren</code></td><td>\u662F\u5426\u79FB\u9664 <code>children</code> \u8282\u70B9</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>cb</code></td><td>\u8F6C\u6362\u6210\u6570\u7EC4\u7ED3\u6784\u65F6\u56DE\u8C03</td><td><code>(item: any, parent: any, deep: number) => void</code></td><td>-</td></tr></tbody></table><h3 id="arrToTree"><a class="lake-link"><i data-anchor="arrToTree"></i></a>arrToTree</h3><p>\u6570\u7EC4\u8F6C\u6362\u6210\u6811\u6570\u636E\u3002</p><blockquote><p>\u82E5 <code>parent_id</code> \u4E3A\u5B57\u7B26\u4E32\uFF0C\u5219\u6839\u503C<strong>\u52A1\u5FC5</strong>\u4E3A\u7A7A\u5B57\u7B26\u4E32\u3002</p></blockquote><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td><code>idMapName</code></td><td>\u7F16\u53F7\u9879\u540D</td><td><code>string</code></td><td><code>id</code></td></tr><tr><td><code>parentIdMapName</code></td><td>\u7236\u7F16\u53F7\u9879\u540D</td><td><code>string</code></td><td><code>parent_id</code></td></tr><tr><td><code>rootParentIdValue</code></td><td>\u6839\u7236\u7F16\u53F7\u503C\uFF0C\u9ED8\u8BA4\u4F1A\u81EA\u52A8\u8BA1\u7B97\u5F97\u5230\u6700\u5408\u9002\u7684\u6839\u7236\u7F16\u53F7\u503C</td><td><code>any</code></td><td>-</td></tr><tr><td><code>childrenMapName</code></td><td>\u5B50\u9879\u540D</td><td><code>string</code></td><td><code>children</code></td></tr><tr><td><code>cb</code></td><td>\u8F6C\u6362\u6210\u6811\u6570\u636E\u65F6\u56DE\u8C03</td><td><code>(item: any) => void</code></td><td>-</td></tr></tbody></table><h3 id="arrToTreeNode"><a class="lake-link"><i data-anchor="arrToTreeNode"></i></a>arrToTreeNode</h3><p>\u6570\u7EC4\u8F6C\u6362\u6210 <code>nz-tree</code> \u6570\u636E\u6E90\uFF0C\u901A\u8FC7 <code>options</code> \u8F6C\u5316\u9879\u540D\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>options.cb</code> \u66F4\u9AD8\u7EA7\u51B3\u5B9A\u6570\u636E\u9879\u3002</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td><code>idMapName</code></td><td>\u7F16\u53F7\u9879\u540D</td><td><code>string</code></td><td><code>id</code></td></tr><tr><td><code>parentIdMapName</code></td><td>\u7236\u7F16\u53F7\u9879\u540D</td><td><code>string</code></td><td><code>parent_id</code></td></tr><tr><td><code>titleMapName</code></td><td>\u6807\u9898\u9879\u540D</td><td><code>string</code></td><td><code>title</code></td></tr><tr><td><code>isLeafMapName</code></td><td>\u662F\u5426\u53F6\u8282\u70B9\u9879\u540D\uFF0C\u82E5\u6570\u636E\u6E90\u4E0D\u5B58\u5728\u65F6\u81EA\u52A8\u6839\u636E <code>children</code> \u503C\u51B3\u5B9A\u662F\u5426\u4E3A\u53F6\u5B50\u8282\u70B9</td><td><code>string</code></td><td><code>isLeaf</code></td></tr><tr><td><code>checkedMapname</code></td><td>\u8282\u70B9 Checkbox \u662F\u5426\u9009\u4E2D\u9879\u540D</td><td><code>string</code></td><td><code>checked</code></td></tr><tr><td><code>selectedMapname</code></td><td>\u8282\u70B9\u672C\u8EAB\u662F\u5426\u9009\u4E2D\u9879\u540D</td><td><code>string</code></td><td><code>selected</code></td></tr><tr><td><code>expandedMapname</code></td><td>\u8282\u70B9\u662F\u5426\u5C55\u5F00(\u53F6\u5B50\u8282\u70B9\u65E0\u6548)\u9879\u540D</td><td><code>string</code></td><td><code>expanded</code></td></tr><tr><td><code>disabledMapname</code></td><td>\u8BBE\u7F6E\u662F\u5426\u7981\u7528\u8282\u70B9(\u4E0D\u53EF\u8FDB\u884C\u4EFB\u4F55\u64CD\u4F5C)\u9879\u540D</td><td><code>string</code></td><td><code>disabled</code></td></tr><tr><td><code>cb</code></td><td>\u8F6C\u6362\u6210\u6570\u7EC4\u7ED3\u6784\u65F6\u56DE\u8C03</td><td><code>(item: any, parent: any, deep: number) => void</code></td><td>-</td></tr></tbody></table><h3 id="visitTree"><a class="lake-link"><i data-anchor="visitTree"></i></a>visitTree</h3><p>\u9012\u5F52\u8BBF\u95EE\u6574\u4E2A\u6811\u3002</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td><code>childrenMapName</code></td><td>\u5B50\u9879\u540D</td><td><code>string</code></td><td><code>children</code></td></tr></tbody></table><h3 id="findTree"><a class="lake-link"><i data-anchor="findTree"></i></a>findTree</h3><p>\u6839\u636E\u6761\u4EF6\u8FD4\u56DE\u6811\u7684\u7B2C\u4E00\u4E2A\u503C\uFF0C\u5426\u5219\u8FD4\u56DE <code>undefined</code>\u3002</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td><code>childrenMapName</code></td><td>\u5B50\u9879\u540D</td><td><code>string</code></td><td><code>children</code></td></tr></tbody></table><h3 id="getKeysByTreeNode"><a class="lake-link"><i data-anchor="getKeysByTreeNode"></i></a>getKeysByTreeNode</h3><p>\u83B7\u53D6\u6240\u6709\u5DF2\u7ECF\u9009\u4E2D\u7684 <code>key</code> \u503C\u3002</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td><code>includeHalfChecked</code></td><td>\u662F\u5426\u5305\u542B\u534A\u9009\u72B6\u6001\u7684\u503C</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>keyMapName</code></td><td>\u662F\u5426\u91CD\u65B0\u6307\u5B9A <code>key</code> \u952E\u540D\uFF0C\u82E5\u4E0D\u6307\u5B9A\u8868\u793A\u4F7F\u7528 <code>NzTreeNode.key</code> \u503C</td><td><code>string</code></td><td>-</td></tr><tr><td><code>cb</code></td><td>\u56DE\u8C03\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u503C <code>key</code> \u503C\uFF0C\u4F18\u5148\u7EA7\u9AD8\u4E8E\u5176\u4ED6</td><td><code>(item: NzTreeNode, parent: NzTreeNode, deep: number) => any</code></td><td>-</td></tr></tbody></table><h3 id="flat"><a class="lake-link"><i data-anchor="flat"></i></a>flat</h3><p>\u9012\u5F52\u6241\u5E73\u6570\u7EC4\u3002</p><pre class="hljs language-ts"><code>srv.flat([1, [2, 3, [4, 5, [6]]]]) => [1,2,3,4,5,6]
srv.flat([1, [2, 3, [4, 5, [6]]]], 1) => [1,2,3,[4, 5, [6]]]</code></pre><h3 id="groupBy"><a class="lake-link"><i data-anchor="groupBy"></i></a>groupBy</h3><p>\u5BF9\u6570\u7EC4\u8FDB\u884C\u5206\u7EC4\u3002</p><pre class="hljs language-ts"><code>srv.groupBy([6.1, 4.2, 6.3], Math.floor) => {"4":[4.2],"6":[6.1,6.3]}
srv.groupBy(['one', 'two', 'three'], v => v.length) => {"3":["one","two"],"5":["three"]}</code></pre><h3 id="uniq"><a class="lake-link"><i data-anchor="uniq"></i></a>uniq</h3><p>\u521B\u5EFA\u53BB\u91CD\u540E\u7684\u6570\u7EC4\u3002</p><pre class="hljs language-ts"><code>uniq([1, 2, 2, 3, 1]) => [1,2,3]
uniq([{ a: 1 }, { a: 1 }, { a: 2 }], 'a') => [{"a":1},{"a":2}]
uniq([{ a: 1 }, { a: 1 }, { a: 2 }], i => (i.a === 1 ? 'a' : 'b')) => [{"a":1},{"a":2}]</code></pre></section>`,meta:{title:"array",subtitle:"\u6570\u7EC4,\u6811,\u6241\u5E73,\u5206\u7EC4,\u53BB\u91CD",type:"Tools"},toc:[{id:"ArrayService",title:"ArrayService",h:2,children:[{id:"treeToArr",title:"treeToArr",h:3},{id:"arrToTree",title:"arrToTree",h:3},{id:"arrToTreeNode",title:"arrToTreeNode",h:3},{id:"visitTree",title:"visitTree",h:3},{id:"findTree",title:"findTree",h:3},{id:"getKeysByTreeNode",title:"getKeysByTreeNode",h:3},{id:"flat",title:"flat",h:3},{id:"groupBy",title:"groupBy",h:3},{id:"uniq",title:"uniq",h:3}]}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-array"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var f=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/browser/index.en-US.md","zh-CN":"packages/util/browser/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="CookieService"><a class="lake-link"><i data-anchor="CookieService"></i></a>CookieService</h2><p>A set of simple Cookie manipulation classes.</p><ul><li><p><code>cookie</code> Original cookie value</p></li><li><p><code>getAll</code> Get all cookie key-value pairs</p></li><li><p><code>get</code> Get the value of given cookie <code>key</code></p></li><li><p><code>put</code> Sets a value for given cookie key</p></li></ul></section><example-cookie-index></example-cookie-index><section class="markdown"><h2 id="isEmpty"><a class="lake-link"><i data-anchor="isEmpty"></i></a>isEmpty</h2><p>Used to verify <code>&lt;ng-content /></code> is empty, useful for custom components.</p><h2 id="updateHostClass"><a class="lake-link"><i data-anchor="updateHostClass"></i></a>updateHostClass</h2><p>Update host component style <code>class</code>, for example:</p><pre class="hljs language-ts"><code>updateHostClass(
  this.el.nativeElement,
  this.renderer,
  {
    [ 'classname' ]: true,
    [ 'classname' ]: this.type === '1',
    [ this.cls ]: true,
    [ \`a-\${this.cls}\` ]: true
  }
)</code></pre><h2 id="copy"><a class="lake-link"><i data-anchor="copy"></i></a>copy</h2><p>Copy text to clipboard.</p><h2 id="ScrollService"><a class="lake-link"><i data-anchor="ScrollService"></i></a>ScrollService</h2><p>Scrollbar control allows scrolling to where the specified element.</p><table><thead><tr><th>Method</th><th>Property</th><th>Description</th></tr></thead><tbody><tr><td><code>getScrollPosition</code></td><td><code>element?: Element</code></td><td>Retrieves the current scroll position</td></tr><tr><td><code>scrollToPosition</code></td><td><code>element: Element | Window, position: [number, number]</code></td><td>Sets the scroll position</td></tr><tr><td><code>scrollToElement</code></td><td><code>element?: Element, topOffset = 0</code></td><td>Scroll to element</td></tr><tr><td><code>scrollToTop</code></td><td><code>topOffset = 0</code></td><td>Scroll to top</td></tr></tbody></table></section>`,meta:{title:"browser",subtitle:"Cookie, Copy, DOM etc",type:"Tools"},toc:[{id:"CookieService",title:"CookieService",h:2},{id:"isEmpty",title:"isEmpty",h:2},{id:"updateHostClass",title:"updateHostClass",h:2},{id:"copy",title:"copy",h:2},{id:"ScrollService",title:"ScrollService",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="CookieService"><a class="lake-link"><i data-anchor="CookieService"></i></a>CookieService</h2><p>\u4E00\u7EC4\u7B80\u5355\u7684 Cookie \u64CD\u4F5C\u7C7B\u3002</p><ul><li><p><code>cookie</code> \u539F\u59CBCookie\u503C</p></li><li><p><code>getAll</code> \u83B7\u53D6\u6240\u6709Cookie\u952E\u503C\u5BF9</p></li><li><p><code>get</code> \u83B7\u53D6\u6307\u5B9A <code>key</code> \u7684\u503C</p></li><li><p><code>put</code> \u8BBE\u7F6E\u6307\u5B9A Cookie \u952E\u7684\u503C</p></li></ul></section><example-cookie-index></example-cookie-index><section class="markdown"><h2 id="isEmpty"><a class="lake-link"><i data-anchor="isEmpty"></i></a>isEmpty</h2><p>\u7528\u4E8E\u6821\u9A8C <code>&lt;ng-content /></code> \u662F\u5426\u4E3A\u7A7A\uFF0C\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u65F6\u86EE\u6709\u7528\u3002</p><h2 id="updateHostClass"><a class="lake-link"><i data-anchor="updateHostClass"></i></a>updateHostClass</h2><p>\u66F4\u65B0\u5BBF\u4E3B\u7EC4\u4EF6\u6837\u5F0F <code>class</code>\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-ts"><code>updateHostClass(
  this.el.nativeElement,
  this.renderer,
  {
    [ 'classname' ]: true,
    [ 'classname' ]: this.type === '1',
    [ this.cls ]: true,
    [ \`a-\${this.cls}\` ]: true
  }
)</code></pre><h2 id="copy"><a class="lake-link"><i data-anchor="copy"></i></a>copy</h2><p>\u590D\u5236\u5B57\u7B26\u4E32\u6587\u6863\u81F3\u526A\u8D34\u677F\u3002</p><h2 id="ScrollService"><a class="lake-link"><i data-anchor="ScrollService"></i></a>ScrollService</h2><p>\u6EDA\u52A8\u6761\u63A7\u5236\uFF0C\u5141\u8BB8\u6EDA\u52A8\u81F3\u6307\u5B9A\u5143\u7D20\u6240\u5904\u4F4D\u7F6E\u3002</p><table><thead><tr><th>\u63A5\u53E3\u540D</th><th>\u53C2\u6570</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td><code>getScrollPosition</code></td><td><code>element?: Element</code></td><td>\u83B7\u53D6\u6EDA\u52A8\u6761\u4F4D\u7F6E</td></tr><tr><td><code>scrollToPosition</code></td><td><code>element: Element | Window, position: [number, number]</code></td><td>\u8BBE\u7F6E\u6EDA\u52A8\u6761\u4F4D\u7F6E</td></tr><tr><td><code>scrollToElement</code></td><td><code>element?: Element, topOffset = 0</code></td><td>\u8BBE\u7F6E\u6EDA\u52A8\u6761\u81F3\u6307\u5B9A\u5143\u7D20</td></tr><tr><td><code>scrollToTop</code></td><td><code>topOffset = 0</code></td><td>\u6EDA\u52A8\u81F3\u9876\u90E8</td></tr></tbody></table></section>`,meta:{title:"browser",subtitle:"Cookie\u3001Copy\u3001DOM \u7B49",type:"Tools"},toc:[{id:"CookieService",title:"CookieService",h:2},{id:"isEmpty",title:"isEmpty",h:2},{id:"updateHostClass",title:"updateHostClass",h:2},{id:"copy",title:"copy",h:2},{id:"ScrollService",title:"ScrollService",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-browser"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var g=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/date-time/index.en-US.md","zh-CN":"packages/util/date-time/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="toDate"><a class="lake-link"><i data-anchor="toDate"></i></a>toDate</h2><p>Convert to <code>Date</code> format, support <code>Date, number, string</code> types, If the argument is a number, it is treated as a timestamp.</p><ul><li><p><code>formatString</code> If parsing fails try to parse the date by pressing <code>formatString</code></p></li><li><p><code>defaultValue</code> If parsing fails returned default value, default: <code>new Date(NaN)</code></p></li><li><p><code>timestampSecond</code> Whether the incoming value is in seconds</p></li></ul><h2 id="formatDate"><a class="lake-link"><i data-anchor="formatDate"></i></a>formatDate</h2><p>Format date, supports <code>Date, number, string</code> types, If the argument is a number, it is treated as a timestamp.</p><ul><li><p>Please refer to <a target="_blank" href="https://date-fns.org/v2.30.0/docs/format" data-url="https://date-fns.org/v2.30.0/docs/format">date-fnd format</a> for string format</p></li><li><p><code>dateLocale</code> Recommended to be consistent with NG-ZORRO by using <code>inject(NZ_DATE_LOCALE)</code></p></li></ul><h2 id="dateTimePickerUtil"><a class="lake-link"><i data-anchor="dateTimePickerUtil"></i></a>dateTimePickerUtil</h2><p>\u4E00\u7EC4\u9488\u5BF9 <a target="_blank" href="https://ng.ant.design/components/date-picker/en" data-url="https://ng.ant.design/components/date-picker/en">DatePicker</a> \u7684\u5DE5\u5177\u7C7B\u3002</p><ul><li><p><code>now</code> Current local time</p></li><li><p><code>date</code> Current local date (not including time part)</p></li><li><p><code>removeTime</code> Remove the time part of the date</p></li><li><p><code>format</code> Format date-time</p></li><li><p><code>getDiffDays</code> Calculate the number of days between two dates, <code>0</code> means the same day</p></li><li><p><code>disabledBeforeDate</code> Disabled Before date (Default: today), Generally serves <code>nzDisabledDate</code></p></li><li><p><code>disabledAfterDate</code> Disabled After date (Default: today), Generally serves <code>nzDisabledDate</code></p></li><li><p><code>disabledBeforeTime</code> Disabled Before time (Default: now), Generally serves <code>nzDisabledTime</code></p></li><li><p><code>disabledAfterTime</code> Disabled After time (Default: now), Generally serves <code>nzDisabledTime</code></p></li></ul><pre class="hljs language-ts"><code>disabledDate = dateTimePickerUtil.disabledBeforeDate();
disabledDateTime = dateTimePickerUtil.disabledBeforeTime({ offsetSeconds: 60 * 5 });</code></pre><h2 id="getTimeDistance"><a class="lake-link"><i data-anchor="getTimeDistance"></i></a>getTimeDistance</h2><p>Get the time range, return <code>[ Date, Date]</code> for the start and end dates, for example: Get this week time:</p><pre class="hljs language-ts"><code>getTimeDistance('week')</code></pre><p><strong>Parameters</strong></p><ul><li><p><code>type</code> Shortcut type, with <code>-</code> for last time, if specified <code>number</code> type for days</p><ul><li><p><code>today</code>, <code>-today</code>, <code>yesterday</code> Today or yesterday</p></li><li><p><code>week</code>, <code>-week</code> This week or last week</p></li><li><p><code>month</code>, <code>-month</code> This month or last month</p></li><li><p><code>year</code>, <code>-year</code> This year or last year</p></li></ul></li><li><p><code>time</code> Specify start time, default is <code>now</code></p></li></ul></section>`,meta:{title:"date-time",subtitle:"Date Time Conversion",type:"Tools"},toc:[{id:"toDate",title:"toDate",h:2},{id:"formatDate",title:"formatDate",h:2},{id:"dateTimePickerUtil",title:"dateTimePickerUtil",h:2},{id:"getTimeDistance",title:"getTimeDistance",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="toDate"><a class="lake-link"><i data-anchor="toDate"></i></a>toDate</h2><p>\u8F6C\u6362\u6210 <code>Date</code> \u683C\u5F0F\uFF0C\u652F\u6301 <code>Date, number, string</code> \u7C7B\u578B\uFF0C\u5982\u679C\u662F <code>number</code> \u8868\u793A Unix timestamp\u3002</p><ul><li><p><code>formatString</code> \u5982\u679C\u8F6C\u6362\u5931\u8D25\u5C1D\u8BD5\u6839\u636E <code>formatString</code> \u683C\u5F0F\u6765\u8F6C\u6362</p></li><li><p><code>defaultValue</code> \u65E0\u6548\u65E5\u671F\u5E94\u8FD4\u56DE\u7684\u9ED8\u8BA4\u503C\uFF0C\u9ED8\u8BA4\uFF1A<code>new Date(NaN)</code></p></li><li><p><code>timestampSecond</code> \u4F20\u5165\u503C\u662F\u5426\u79D2\u7EA7</p></li></ul><h2 id="formatDate"><a class="lake-link"><i data-anchor="formatDate"></i></a>formatDate</h2><p>\u683C\u5F0F\u5316\u65E5\u671F\uFF0C\u652F\u6301 <code>Date, number, string</code> \u7C7B\u578B\uFF0C\u5982\u679C\u662F <code>number</code> \u8868\u793A Unix timestamp)\u3002</p><ul><li><p>\u5B57\u7B26\u4E32\u683C\u5F0F\u8BF7\u53C2\u8003 <a target="_blank" href="https://date-fns.org/v2.30.0/docs/format" data-url="https://date-fns.org/v2.30.0/docs/format">date-fnd format</a></p></li><li><p><code>dateLocale</code> \u5EFA\u8BAE\u901A\u8FC7\u4F7F\u7528 <code>inject(NZ_DATE_LOCALE)</code> \u4E0E NG-ZORRO \u4FDD\u6301\u4E00\u81F4</p></li></ul><h2 id="dateTimePickerUtil"><a class="lake-link"><i data-anchor="dateTimePickerUtil"></i></a>dateTimePickerUtil</h2><p>\u4E00\u7EC4\u9488\u5BF9 <a target="_blank" href="https://ng.ant.design/components/date-picker/en" data-url="https://ng.ant.design/components/date-picker/en">DatePicker</a> \u7684\u5DE5\u5177\u7C7B\u3002</p><ul><li><p><code>now</code> \u5F53\u524D\u672C\u5730\u65F6\u95F4</p></li><li><p><code>date</code> \u5F53\u524D\u672C\u5730\u65E5\u671F\uFF08\u4E0D\u5305\u542B\u65F6\u95F4\u90E8\u5206\uFF09</p></li><li><p><code>removeTime</code> \u79FB\u9664\u65E5\u671F\u7684\u65F6\u95F4\u90E8\u5206</p></li><li><p><code>format</code> \u683C\u5F0F\u5316\u65E5\u671F</p></li><li><p><code>getDiffDays</code> \u8BA1\u7B97\u4E24\u4E2A\u65E5\u671F\u76F8\u5DEE\u5929\u6570\uFF0C<code>0</code> \u8868\u793A\u540C\u4E00\u5929</p></li><li><p><code>disabledBeforeDate</code> \u7981\u7528\u4E4B\u524D\u65E5\u671F\uFF08\u9ED8\u8BA4\uFF1A\u4ECA\u5929\uFF09\uFF0C\u4E00\u822C\u670D\u52A1\u4E8E <code>nzDisabledDate</code></p></li><li><p><code>disabledAfterDate</code> \u7981\u7528\u4E4B\u540E\u65E5\u671F\uFF08\u9ED8\u8BA4\uFF1A\u4ECA\u5929\uFF09\uFF0C\u4E00\u822C\u670D\u52A1\u4E8E <code>nzDisabledDate</code></p></li><li><p><code>disabledBeforeTime</code> \u7981\u7528\u4E4B\u524D\u65F6\u95F4\uFF08\u9ED8\u8BA4\uFF1A\u73B0\u5728\uFF09\uFF0C\u4E00\u822C\u670D\u52A1\u4E8E <code>nzDisabledTime</code></p></li><li><p><code>disabledAfterTime</code> \u7981\u7528\u4E4B\u540E\u65F6\u95F4\uFF08\u9ED8\u8BA4\uFF1A\u73B0\u5728\uFF09\uFF0C\u4E00\u822C\u670D\u52A1\u4E8E <code>nzDisabledTime</code></p></li></ul><pre class="hljs language-ts"><code>disabledDate = dateTimePickerUtil.disabledBeforeDate();
disabledDateTime = dateTimePickerUtil.disabledBeforeTime({ offsetSeconds: 60 * 5 });</code></pre><h2 id="getTimeDistance"><a class="lake-link"><i data-anchor="getTimeDistance"></i></a>getTimeDistance</h2><p>\u83B7\u53D6\u65F6\u95F4\u8303\u56F4\uFF0C\u8FD4\u56DE <code>[ Date, Date]</code> \u8868\u793A\u5F00\u59CB\u4E0E\u7ED3\u675F\u65E5\u671F\uFF0C\u4F8B\u5982\uFF1A\u83B7\u53D6\u672C\u5468\u65F6\u95F4\uFF1A</p><pre class="hljs language-ts"><code>getTimeDistance('week')</code></pre><p><strong>\u53C2\u6570</strong></p><ul><li><p><code>type</code> \u5FEB\u6377\u7C7B\u578B\uFF0C\u5E26 <code>-</code> \u8868\u793A\u8FC7\u53BB\u4E00\u4E2A\u65F6\u95F4\uFF0C\u82E5\u6307\u5B9A <code>number</code> \u8868\u793A\u5929\u6570</p><ul><li><p><code>today</code>\u3001<code>-today</code>\u3001<code>yesterday</code> \u4ECA\u5929\u6216\u6628\u5929</p></li><li><p><code>week</code>\u3001<code>-week</code> \u672C\u5468\u6216\u4E0A\u5468</p></li><li><p><code>month</code>\u3001<code>-month</code> \u672C\u6708\u6216\u4E0A\u6708</p></li><li><p><code>year</code>\u3001<code>-year</code> \u4ECA\u5E74\u6216\u53BB\u5E74</p></li></ul></li><li><p><code>time</code> \u6307\u5B9A\u5F00\u59CB\u65F6\u95F4\uFF0C\u9ED8\u8BA4\u4E3A\uFF1A<code>now</code></p></li></ul></section>`,meta:{title:"date-time",subtitle:"\u65E5\u671F\u65F6\u95F4\u8F6C\u6362",type:"Tools"},toc:[{id:"toDate",title:"toDate",h:2},{id:"formatDate",title:"formatDate",h:2},{id:"dateTimePickerUtil",title:"dateTimePickerUtil",h:2},{id:"getTimeDistance",title:"getTimeDistance",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-date-time"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var k=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/decorator/index.en-US.md","zh-CN":"packages/util/decorator/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="toBoolean,@InputBoolean"><a class="lake-link"><i data-anchor="toBoolean,@InputBoolean"></i></a>toBoolean,@InputBoolean</h2><blockquote><p>Recommended to use the built-in <code>transform</code> and <code>static ngAcceptInputType_</code> can be removed</p></blockquote><p>Convert to <code>boolean</code>, <code>@InputBoolean()</code> can enhance the experience of binding number attributes, for example:</p><pre class="hljs language-ts"><code>@Input() @InputBoolean() disabled = false;</code></pre><p>The following calling methods will all be considered effective:</p><pre class="hljs language-html"><code>&lt;test disabled&gt;&lt;/test&gt; // true
&lt;test disabled="true"&gt;&lt;/test&gt; // true
&lt;test [disabled]="true"&gt;&lt;/test&gt; // true
&lt;test disabled="false"&gt;&lt;/test&gt; // false
&lt;test [disabled]="false"&gt;&lt;/test&gt; // false</code></pre><h2 id="toNumber,@InputNumber"><a class="lake-link"><i data-anchor="toNumber,@InputNumber"></i></a>toNumber,@InputNumber</h2><blockquote><p>Recommended to use the built-in <code>transform</code> and <code>static ngAcceptInputType_</code> can be removed</p></blockquote><p>Convert to <code>number</code>, <code>@InputNumber()</code> can enhance the experience of binding number attributes, for example:</p><pre class="hljs language-ts"><code>@Input() @InputNumber() count = 10;</code></pre><p>The following calling methods will all be considered effective:</p><pre class="hljs language-html"><code>&lt;test count="1"&gt;&lt;/test&gt; // 1
&lt;test [count]="1"&gt;&lt;/test&gt; // 1</code></pre><h2 id="@ZoneOutside"><a class="lake-link"><i data-anchor="@ZoneOutside"></i></a>@ZoneOutside</h2><p>The decoration method runs in <code>runOutsideAngular</code>.</p><pre class="hljs language-ts"><code>class MockClass {
  constructor(public ngZone: NgZone) {}

  @ZoneOutside()
  run(): void {}
}</code></pre><h2 id="@ZoneRun"><a class="lake-link"><i data-anchor="@ZoneRun"></i></a>@ZoneRun</h2><p>The decoration method runs in <code>run</code>.</p><pre class="hljs language-ts"><code>class MockClass {
  constructor(public ngZone: NgZone) {}

  @ZoneRun()
  run(): void {}
}</code></pre></section>`,meta:{title:"decorator",subtitle:"Decorator",type:"Tools"},toc:[{id:"toBoolean,@InputBoolean",title:"toBoolean, @InputBoolean",h:2},{id:"toNumber,@InputNumber",title:"toNumber, @InputNumber",h:2},{id:"@ZoneOutside",title:"@ZoneOutside",h:2},{id:"@ZoneRun",title:"@ZoneRun",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="toBoolean,@InputBoolean"><a class="lake-link"><i data-anchor="toBoolean,@InputBoolean"></i></a>toBoolean,@InputBoolean</h2><blockquote><p>\u5EFA\u8BAE\u4F7F\u7528\u5185\u7F6E\u7684 <code>transform</code> \u6765\u66FF\u4EE3\uFF0C\u5E76\u4E14\u4E0D\u518D\u9700\u8981 <code>static ngAcceptInputType_</code></p></blockquote><p>\u8F6C\u6362 <code>boolean</code> \u5C5E\u6027\uFF0C\u5176\u4E2D <code>@InputBoolean()</code> \u53EF\u4EE5\u5F3A\u5316\u5E03\u5C14\u5C5E\u6027\u7ED1\u5B9A\u7684\u4F53\u9A8C\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-ts"><code>@Input() @InputBoolean() disabled = false;</code></pre><p>\u4EE5\u4E0B\u8C03\u7528\u65B9\u6CD5\u90FD\u4F1A\u8BA4\u4E3A\u662F\u6709\u6548\uFF1A</p><pre class="hljs language-html"><code>&lt;test disabled&gt;&lt;/test&gt; // true
&lt;test disabled="true"&gt;&lt;/test&gt; // true
&lt;test [disabled]="true"&gt;&lt;/test&gt; // true
&lt;test disabled="false"&gt;&lt;/test&gt; // false
&lt;test [disabled]="false"&gt;&lt;/test&gt; // false</code></pre><h2 id="toNumber,@InputNumber"><a class="lake-link"><i data-anchor="toNumber,@InputNumber"></i></a>toNumber,@InputNumber</h2><blockquote><p>\u5EFA\u8BAE\u4F7F\u7528\u5185\u7F6E\u7684 <code>transform</code> \u6765\u66FF\u4EE3\uFF0C\u5E76\u4E14\u4E0D\u518D\u9700\u8981 <code>static ngAcceptInputType_</code></p></blockquote><p>\u8F6C\u6362 <code>number</code> \u5C5E\u6027\uFF0C\u5176\u4E2D <code>@InputNumber()</code> \u53EF\u4EE5\u5F3A\u5316\u6570\u5B57\u5C5E\u6027\u7ED1\u5B9A\u7684\u4F53\u9A8C\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-ts"><code>@Input() @InputNumber() count = 10;</code></pre><p>\u4EE5\u4E0B\u8C03\u7528\u65B9\u6CD5\u90FD\u4F1A\u8BA4\u4E3A\u662F\u6709\u6548\uFF1A</p><pre class="hljs language-html"><code>&lt;test count="1"&gt;&lt;/test&gt; // 1
&lt;test [count]="1"&gt;&lt;/test&gt; // 1</code></pre><h2 id="@ZoneOutside"><a class="lake-link"><i data-anchor="@ZoneOutside"></i></a>@ZoneOutside</h2><p>\u88C5\u9970\u65B9\u6CD5\u8FD0\u884C\u5728 <code>runOutsideAngular</code> \u5185\u3002</p><pre class="hljs language-ts"><code>class MockClass {
  constructor(public ngZone: NgZone) {}

  @ZoneOutside()
  run(): void {}
}</code></pre><h2 id="@ZoneRun"><a class="lake-link"><i data-anchor="@ZoneRun"></i></a>@ZoneRun</h2><p>\u88C5\u9970\u65B9\u6CD5\u8FD0\u884C\u5728 <code>run</code> \u5185\u3002</p><pre class="hljs language-ts"><code>class MockClass {
  constructor(public ngZone: NgZone) {}

  @ZoneRun()
  run(): void {}
}</code></pre></section>`,meta:{title:"decorator",subtitle:"\u88C5\u9970\u5668",type:"Tools"},toc:[{id:"toBoolean,@InputBoolean",title:"toBoolean, @InputBoolean",h:2},{id:"toNumber,@InputNumber",title:"toNumber, @InputNumber",h:2},{id:"@ZoneOutside",title:"@ZoneOutside",h:2},{id:"@ZoneRun",title:"@ZoneRun",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-decorator"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var y=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/form/index.en-US.md","zh-CN":"packages/util/form/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="MatchControl"><a class="lake-link"><i data-anchor="MatchControl"></i></a>MatchControl</h2><p>Match two control values, for examples:</p><pre class="hljs language-ts"><code>this.form = new FormGroup({
  pwd: new FormControl(''),
  repwd: new FormControl(''),
}, {
  validators: MatchControl('pwd', 'repwd'),
});</code></pre><h2 id="_Validators"><a class="lake-link"><i data-anchor="_Validators"></i></a>_Validators</h2><p>A set of validators for reactive forms, including:</p><ul><li><p><code>_Validators.num</code> Wheter is number</p></li><li><p><code>_Validators.int</code> Wheter is integer</p></li><li><p><code>_Validators.decimal</code> Wheter is decimal</p></li><li><p><code>_Validators.idCard</code> Wheter is People's Republic of China identity card</p></li><li><p><code>_Validators.mobile</code> Wheter is mobile (China)</p></li><li><p><code>_Validators.url</code> Wheter is url address</p></li><li><p><code>_Validators.ip4</code> Wheter is IP address (Support v4, v6)</p></li><li><p><code>_Validators.color</code> Wheter is color</p></li><li><p><code>_Validators.chinese</code> Wheter is chinese</p></li></ul><p>Every method has a corresponding form validation:</p><pre class="hljs language-ts"><code>this.valForm = fb.group({
  // is mobile
  mobile: [null, Validators.compose([Validators.required, _Validators.mobile])]
});</code></pre></section>`,meta:{title:"form",subtitle:"Reactive Forms",type:"Tools"},toc:[{id:"MatchControl",title:"MatchControl",h:2},{id:"_Validators",title:"_Validators",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="MatchControl"><a class="lake-link"><i data-anchor="MatchControl"></i></a>MatchControl</h2><p>\u5339\u914D\u4E24\u4E2A\u63A7\u4EF6\u503C\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-ts"><code>this.form = new FormGroup({
  pwd: new FormControl(''),
  repwd: new FormControl(''),
}, {
  validators: MatchControl('pwd', 'repwd'),
});</code></pre><h2 id="_Validators"><a class="lake-link"><i data-anchor="_Validators"></i></a>_Validators</h2><p>\u4E00\u5957\u7528\u4E8E\u54CD\u5E94\u5F0F\u8868\u5355\u7684\u9A8C\u8BC1\u5668\uFF0C\u5305\u542B\uFF1A</p><ul><li><p><code>_Validators.num</code> \u662F\u5426\u4E3A\u6570\u5B57</p></li><li><p><code>_Validators.int</code> \u662F\u5426\u4E3A\u6574\u6570</p></li><li><p><code>_Validators.decimal</code> \u662F\u5426\u4E3A\u5C0F\u6570\u70B9\u6570\u503C</p></li><li><p><code>_Validators.idCard</code> \u662F\u5426\u4E3A\u4E2D\u534E\u4EBA\u6C11\u5171\u548C\u56FD\u5C45\u6C11\u8EAB\u4EFD\u8BC1</p></li><li><p><code>_Validators.mobile</code> \u662F\u5426\u4E3A\u624B\u673A\u53F7\uFF08\u4E2D\u56FD\uFF09</p></li><li><p><code>_Validators.url</code> \u662F\u5426URL\u5730\u5740</p></li><li><p><code>_Validators.ip4</code> \u662F\u5426IP\u5730\u5740\uFF08\u652F\u6301v4\u3001v6\uFF09</p></li><li><p><code>_Validators.color</code> \u662F\u5426\u989C\u8272\u4EE3\u7801\u503C</p></li><li><p><code>_Validators.chinese</code> \u662F\u5426\u4E2D\u6587</p></li></ul><p>\u6BCF\u4E00\u4E2A\u9A8C\u8BC1\u578B\u90FD\u5305\u62EC\u7740\u7528\u4E8E\u8868\u5355\u9A8C\u8BC1\u5668\uFF1A</p><pre class="hljs language-ts"><code>this.valForm = fb.group({
  // \u624B\u673A\u53F7
  mobile: [null, Validators.compose([Validators.required, _Validators.mobile])]
});</code></pre></section>`,meta:{title:"form",subtitle:"\u54CD\u5E94\u5F0F\u8868\u5355\u6821\u9A8C",type:"Tools"},toc:[{id:"MatchControl",title:"MatchControl",h:2},{id:"_Validators",title:"_Validators",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-form"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var b=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/format/index.en-US.md","zh-CN":"packages/util/format/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="CurrencyService"><a class="lake-link"><i data-anchor="CurrencyService"></i></a>CurrencyService</h2><blockquote><p>You can override to set the <code>startingUnit</code>, <code>megaUnit</code>, <code>precision</code>, <code>ingoreZeroPrecision</code> through <a href="/docs/global-config" data-url="/docs/global-config">Global Configuration</a>.</p></blockquote><h3 id="format"><a class="lake-link"><i data-anchor="format"></i></a>format</h3><p>Format a number with commas as thousands separators.</p><pre class="hljs language-ts"><code>10000 => \`10,000\`
10000.567 => \`10,000.57\`</code></pre><blockquote><p>Use anguar <code>currency</code> pipe parse when is set, pls refer to <a target="_blank" href="https://angular.io/api/common/CurrencyPipe" data-url="https://angular.io/api/common/CurrencyPipe">document</a>.</p></blockquote><h3 id="mega"><a class="lake-link"><i data-anchor="mega"></i></a>mega</h3><p>Large number format filter.</p><pre class="hljs language-ts"><code>1000 => { value: '1', unit: 'K', unitI18n: '\u5343' }
12456 => { value: '12.46', unit: 'K', unitI18n: '\u5343' }</code></pre><h3 id="cny"><a class="lake-link"><i data-anchor="cny"></i></a>cny</h3><p>Converted into RMB notation.</p><pre class="hljs language-ts"><code>1 => \u58F9\u5143\u6574
1.34 => \u58F9\u5143\u53C1\u89D2\u8086\u5206</code></pre><h2 id="format"><a class="lake-link"><i data-anchor="format"></i></a>format</h2><p>String formatting.</p><pre class="hljs language-ts"><code>format('this is \${name}', { name: 'asdf' })
// output: this is asdf
format('this is \${user.name}', { user: { name: 'asdf' } }, true)
// output: this is asdf</code></pre><h3 id="formatMask"><a class="lake-link"><i data-anchor="formatMask"></i></a>formatMask</h3><p>Format mask.</p><table><thead><tr><th>Character</th><th>Description</th></tr></thead><tbody><tr><td><code>0</code></td><td>Any numbers, if the character at that position does not match, the default is <code>0</code> to fill</td></tr><tr><td><code>9</code></td><td>Any numbers</td></tr><tr><td><code>#</code></td><td>Any letter</td></tr><tr><td><code>U</code></td><td>Convert to uppercase</td></tr><tr><td><code>L</code></td><td>Convert to lowercase</td></tr><tr><td><code>*</code></td><td>Convert to <code>*</code> character</td></tr></tbody></table><pre class="hljs language-ts"><code>formatMask('123', '(###)') => (123)
formatMask('15900000000', '999****9999') => 159****0000
formatMask('aBc', 'UUU') => ABC
formatMask('ABc', 'LLL') => abc</code></pre><p>Or custom Token:</p><pre class="hljs language-ts"><code>const option: FormatMaskOption = {
  mask: 'CC999',
  tokens: { C: { pattern: /.*/, transform: char => (char === '\u4F60' ? 'N' : 'H') } }
}
formatMask('\u4F60\u597D123', option) => NH123</code></pre><h2 id="REGEX"><a class="lake-link"><i data-anchor="REGEX"></i></a>REGEX</h2><p>A set of common regular expressions. You can also get their regular string format through <code>REGEX_STR</code>, and cooperate with <code>new RegExp</code> to complete some additional processing.</p><h2 id="num"><a class="lake-link"><i data-anchor="num"></i></a>num</h2><p>Wheter is number.</p><h2 id="int"><a class="lake-link"><i data-anchor="int"></i></a>int</h2><p>Wheter is integer.</p><h2 id="decimal"><a class="lake-link"><i data-anchor="decimal"></i></a>decimal</h2><p>Wheter is decimal.</p><h2 id="idCard"><a class="lake-link"><i data-anchor="idCard"></i></a>idCard</h2><p>Wheter is People's Republic of China identity card.</p><h2 id="isMobile"><a class="lake-link"><i data-anchor="isMobile"></i></a>isMobile</h2><p>Wheter is mobile (China).</p><h2 id="isUrl"><a class="lake-link"><i data-anchor="isUrl"></i></a>isUrl</h2><p>Wheter is url address.</p><h2 id="isIp"><a class="lake-link"><i data-anchor="isIp"></i></a>isIp</h2><p>Wheter is IP address (Support v4, v6).</p><h2 id="isColor"><a class="lake-link"><i data-anchor="isColor"></i></a>isColor</h2><p>Wheter is color.</p><h2 id="isChinese"><a class="lake-link"><i data-anchor="isChinese"></i></a>isChinese</h2><p>Wheter is chinese.</p></section>`,meta:{title:"format",subtitle:"String,Check,Currency,Mask",type:"Tools"},toc:[{id:"CurrencyService",title:"CurrencyService",h:2,children:[{id:"format",title:"format",h:3},{id:"mega",title:"mega",h:3},{id:"cny",title:"cny",h:3}]},{id:"format",title:"format",h:2,children:[{id:"formatMask",title:"formatMask",h:3}]},{id:"REGEX",title:"REGEX",h:2},{id:"num",title:"num",h:2},{id:"int",title:"int",h:2},{id:"decimal",title:"decimal",h:2},{id:"idCard",title:"idCard",h:2},{id:"isMobile",title:"isMobile",h:2},{id:"isUrl",title:"isUrl",h:2},{id:"isIp",title:"isIp",h:2},{id:"isColor",title:"isColor",h:2},{id:"isChinese",title:"isChinese",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="CurrencyService"><a class="lake-link"><i data-anchor="CurrencyService"></i></a>CurrencyService</h2><blockquote><p>\u53EF\u4EE5\u901A\u8FC7<a href="/docs/global-config" data-url="/docs/global-config">\u5168\u5C40\u914D\u7F6E</a>\u8986\u76D6 <code>startingUnit</code>\u3001<code>megaUnit</code>\u3001<code>precision</code>\u3001<code>ingoreZeroPrecision</code> \u7B49\u53C2\u6570\u3002</p></blockquote><h3 id="format"><a class="lake-link"><i data-anchor="format"></i></a>format</h3><p>\u683C\u5F0F\u5316\u8D27\u5E01\uFF0C\u7528\u9017\u53F7\u5C06\u6570\u5B57\u683C\u5F0F\u5316\u4E3A\u5343\u4F4D\u5206\u9694\u7B26\u3002</p><pre class="hljs language-ts"><code>10000 => \`10,000\`
10000.567 => \`10,000.57\`</code></pre><blockquote><p>\u82E5\u6307\u5B9A\u5219\u8868\u793A\u4F7F\u7528 Angular \u81EA\u5E26\u7684 <code>currency</code> \u7BA1\u9053\u6765\u89E3\u6790\uFF0C\u89C1<a target="_blank" href="https://angular.cn/api/common/CurrencyPipe" data-url="https://angular.cn/api/common/CurrencyPipe">\u6587\u6863</a>\u3002</p></blockquote><h3 id="formatMask"><a class="lake-link"><i data-anchor="formatMask"></i></a>formatMask</h3><p>\u683C\u5F0F\u5316\u63A9\u7801\u3002</p><table><thead><tr><th>\u5B57\u7B26</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td><code>0</code></td><td>\u4EFB\u610F\u6570\u5B57\uFF0C\u82E5\u8BE5\u4F4D\u7F6E\u5B57\u7B26\u4E0D\u7B26\u5408\uFF0C\u5219\u9ED8\u8BA4\u4E3A <code>0</code> \u586B\u5145</td></tr><tr><td><code>9</code></td><td>\u4EFB\u610F\u6570\u5B57</td></tr><tr><td><code>#</code></td><td>\u4EFB\u610F\u5B57\u7B26</td></tr><tr><td><code>U</code></td><td>\u8F6C\u6362\u5927\u5199</td></tr><tr><td><code>L</code></td><td>\u8F6C\u6362\u5C0F\u5199</td></tr><tr><td><code>*</code></td><td>\u8F6C\u6362\u4E3A <code>*</code> \u5B57\u7B26</td></tr></tbody></table><pre class="hljs language-ts"><code>formatMask('123', '(###)') => (123)
formatMask('15900000000', '999****9999') => 159****0000
formatMask('aBc', 'UUU') => ABC
formatMask('ABc', 'LLL') => abc</code></pre><p>\u6216\u81EA\u5B9A\u4E49Token\uFF1A</p><pre class="hljs language-ts"><code>const option: FormatMaskOption = {
  mask: 'CC999',
  tokens: { C: { pattern: /.*/, transform: char => (char === '\u4F60' ? 'N' : 'H') } }
}
formatMask('\u4F60\u597D123', option) => NH123</code></pre><h3 id="mega"><a class="lake-link"><i data-anchor="mega"></i></a>mega</h3><p>\u5927\u6570\u636E\u683C\u5F0F\u5316\u3002</p><pre class="hljs language-ts"><code>1000 => { value: '1', unit: 'K', unitI18n: '\u5343' }
12456 => { value: '12.46', unit: 'K', unitI18n: '\u5343' }</code></pre><h3 id="cny"><a class="lake-link"><i data-anchor="cny"></i></a>cny</h3><p>\u8F6C\u5316\u6210\u4EBA\u6C11\u5E01\u8868\u793A\u6CD5\u3002</p><pre class="hljs language-ts"><code>1 => \u58F9\u5143\u6574
1.34 => \u58F9\u5143\u53C1\u89D2\u8086\u5206</code></pre><h2 id="format"><a class="lake-link"><i data-anchor="format"></i></a>format</h2><p>\u5B57\u7B26\u4E32\u683C\u5F0F\u5316\u3002</p><pre class="hljs language-ts"><code>format('this is \${name}', { name: 'asdf' })
// output: this is asdf
format('this is \${user.name}', { user: { name: 'asdf' } }, true)
// output: this is asdf</code></pre><h2 id="REGEX"><a class="lake-link"><i data-anchor="REGEX"></i></a>REGEX</h2><p>\u4E00\u7EC4\u5E38\u89C1\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u3002\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>REGEX_STR</code> \u6765\u83B7\u53D6\u5B83\u4EEC\u7684\u6B63\u5219\u5B57\u7B26\u4E32\u683C\u5F0F\uFF0C\u914D\u5408 <code>new RegExp</code> \u5B8C\u6210\u4E00\u4E9B\u989D\u5916\u7684\u5904\u7406\u3002</p><h2 id="num"><a class="lake-link"><i data-anchor="num"></i></a>num</h2><p>\u662F\u5426\u4E3A\u6570\u5B57\u3002</p><h2 id="int"><a class="lake-link"><i data-anchor="int"></i></a>int</h2><p>\u662F\u5426\u4E3A\u6574\u6570\u3002</p><h2 id="decimal"><a class="lake-link"><i data-anchor="decimal"></i></a>decimal</h2><p>\u662F\u5426\u4E3A\u5C0F\u6570\u70B9\u6570\u503C\u3002</p><h2 id="idCard"><a class="lake-link"><i data-anchor="idCard"></i></a>idCard</h2><p>\u662F\u5426\u4E3A\u4E2D\u534E\u4EBA\u6C11\u5171\u548C\u56FD\u5C45\u6C11\u8EAB\u4EFD\u8BC1\u3002</p><h2 id="isMobile"><a class="lake-link"><i data-anchor="isMobile"></i></a>isMobile</h2><p>\u662F\u5426\u4E3A\u624B\u673A\u53F7\uFF08\u4E2D\u56FD\uFF09\u3002</p><h2 id="isUrl"><a class="lake-link"><i data-anchor="isUrl"></i></a>isUrl</h2><p>\u662F\u5426URL\u5730\u5740\u3002</p><h2 id="isIp"><a class="lake-link"><i data-anchor="isIp"></i></a>isIp</h2><p>\u662F\u5426IP\u5730\u5740\uFF08\u652F\u6301v4\u3001v6\uFF09\u3002</p><h2 id="isColor"><a class="lake-link"><i data-anchor="isColor"></i></a>isColor</h2><p>\u662F\u5426\u989C\u8272\u4EE3\u7801\u503C\u3002</p><h2 id="isChinese"><a class="lake-link"><i data-anchor="isChinese"></i></a>isChinese</h2><p>\u662F\u5426\u4E2D\u6587\u3002</p></section>`,meta:{title:"format",subtitle:"\u5B57\u7B26,\u6821\u9A8C,\u8D27\u5E01,\u63A9\u7801",type:"Tools"},toc:[{id:"CurrencyService",title:"CurrencyService",h:2,children:[{id:"format",title:"format",h:3},{id:"formatMask",title:"formatMask",h:3},{id:"mega",title:"mega",h:3},{id:"cny",title:"cny",h:3}]},{id:"format",title:"format",h:2},{id:"REGEX",title:"REGEX",h:2},{id:"num",title:"num",h:2},{id:"int",title:"int",h:2},{id:"decimal",title:"decimal",h:2},{id:"idCard",title:"idCard",h:2},{id:"isMobile",title:"isMobile",h:2},{id:"isUrl",title:"isUrl",h:2},{id:"isIp",title:"isIp",h:2},{id:"isColor",title:"isColor",h:2},{id:"isChinese",title:"isChinese",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-format"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var C=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/math/index.en-US.md","zh-CN":"packages/util/math/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="inRange"><a class="lake-link"><i data-anchor="inRange"></i></a>inRange</h2><p>Checks if <code>value</code> is between <code>start</code> and <code>end</code> to, but not including <code>end</code>. If <code>end</code> is not specified, it's set to start with <code>start</code> then set to <code>0</code>. If <code>start</code> is greater than <code>end</code> the params are swapped to support negative ranges.</p><pre class="hljs language-ts"><code>inRange(3, 2, 4); // true
inRange(4, 8); // true
inRange(4, 2); // false
inRange(2, 2); // false
inRange(1.2, 2); // true
inRange(-3, -2, -6); // true</code></pre><h2 id="ceil"><a class="lake-link"><i data-anchor="ceil"></i></a>ceil</h2><p>Computes <code>number</code> rounded up to <code>precision</code>.</p><pre class="hljs language-ts"><code>ceil(4.006); // 5
ceil(6.004, 2); // 6.01
ceil(6040, -2); // 6100</code></pre><h2 id="floor"><a class="lake-link"><i data-anchor="floor"></i></a>floor</h2><p>Computes <code>number</code> rounded down to <code>precision</code>.</p><pre class="hljs language-ts"><code>floor(4.006); // 4
floor(0.046, 2); // 0.04
floor(4060, -2); // 4000</code></pre><h2 id="round"><a class="lake-link"><i data-anchor="round"></i></a>round</h2><p>Computes <code>number</code> rounded to <code>precision</code>.</p><pre class="hljs language-ts"><code>round(4.006); // 4
round(4.006, 2); // 4.01
round(4060, -2); // 4100</code></pre></section>`,meta:{title:"math",subtitle:"Math, Rounding",type:"Tools"},toc:[{id:"inRange",title:"inRange",h:2},{id:"ceil",title:"ceil",h:2},{id:"floor",title:"floor",h:2},{id:"round",title:"round",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="inRange"><a class="lake-link"><i data-anchor="inRange"></i></a>inRange</h2><p>\u68C0\u67E5 <code>value</code> \u662F\u5426\u5728 <code>start</code> \u4E0E <code>end</code> \u4E4B\u95F4\uFF0C\u4F46\u4E0D\u5305\u62EC <code>end</code>\u3002 \u5982\u679C <code>end</code> \u6CA1\u6709\u6307\u5B9A\uFF0C\u90A3\u4E48 <code>start</code> \u8BBE\u7F6E\u4E3A <code>0</code>\u3002 \u5982\u679C <code>start</code> \u5927\u4E8E <code>end</code>\uFF0C\u90A3\u4E48\u53C2\u6570\u4F1A\u4EA4\u6362\u4EE5\u4FBF\u652F\u6301\u8D1F\u8303\u56F4\u3002</p><pre class="hljs language-ts"><code>inRange(3, 2, 4); // true
inRange(4, 8); // true
inRange(4, 2); // false
inRange(2, 2); // false
inRange(1.2, 2); // true
inRange(-3, -2, -6); // true</code></pre><h2 id="ceil"><a class="lake-link"><i data-anchor="ceil"></i></a>ceil</h2><p>\u6839\u636E <code>precision</code>\uFF08\u7CBE\u5EA6\uFF09 \u5411\u4E0A\u820D\u5165 <code>number</code>\u3002</p><pre class="hljs language-ts"><code>ceil(4.006); // 5
ceil(6.004, 2); // 6.01
ceil(6040, -2); // 6100</code></pre><h2 id="floor"><a class="lake-link"><i data-anchor="floor"></i></a>floor</h2><p>\u6839\u636E <code>precision</code>\uFF08\u7CBE\u5EA6\uFF09 \u5411\u4E0B\u820D\u5165 <code>number</code>\u3002</p><pre class="hljs language-ts"><code>floor(4.006); // 4
floor(0.046, 2); // 0.04
floor(4060, -2); // 4000</code></pre><h2 id="round"><a class="lake-link"><i data-anchor="round"></i></a>round</h2><p>\u6839\u636E <code>precision</code>\uFF08\u7CBE\u5EA6\uFF09 \u56DB\u820D\u4E94\u5165 <code>number</code>\u3002</p><pre class="hljs language-ts"><code>round(4.006); // 4
round(4.006, 2); // 4.01
round(4060, -2); // 4100</code></pre></section>`,meta:{title:"math",subtitle:"\u8303\u56F4\u3001\u56DB\u820D\u4E94\u5165",type:"Tools"},toc:[{id:"inRange",title:"inRange",h:2},{id:"ceil",title:"ceil",h:2},{id:"floor",title:"floor",h:2},{id:"round",title:"round",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-math"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var v=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/other/index.en-US.md","zh-CN":"packages/util/other/index.zh-CN.md"},content:{"en-US":{content:`<section class="markdown"><h2 id="omit"><a class="lake-link"><i data-anchor="omit"></i></a>omit</h2><p>Omit specified keys from an object.</p><pre class="hljs language-ts"><code>omit({ a: 1, b: 2, c: 3 }, 'a') // { b: 2, c: 3 }
omit({ a: 1, b: 2, c: 3 }, ['a', 'c']) // { b: 2 }
omit({ a: 1, b: 2 }, key => key === 'a') // { a: 1 }</code></pre><h2 id="deepGet"><a class="lake-link"><i data-anchor="deepGet"></i></a>deepGet</h2><p>Gets the value at <code>path</code> of <code>object</code>, like <code>_.get</code> in lodash.</p><pre class="hljs language-ts"><code>const obj = {
  id: 1,
  user: {
    name: 'cipchk',
    age: 18
  }
};

deepGet(obj, 'id'); // 1
deepGet(obj, 'user.age'); // 18</code></pre><h2 id="deepCopy"><a class="lake-link"><i data-anchor="deepCopy"></i></a>deepCopy</h2><p>Base on <a target="_blank" href="https://github.com/justmoon/node-extend" data-url="https://github.com/justmoon/node-extend">extend</a> deep copy.</p><pre class="hljs language-ts"><code>const source = { a: 1, user: { name: 'cipchk' } };
const obj = deepCopy(source);</code></pre><h2 id="deepMerge"><a class="lake-link"><i data-anchor="deepMerge"></i></a>deepMerge</h2><p>Deep merge object.</p><pre class="hljs language-ts"><code>let original = { a: 1, b: { c: 'c' } };
deepMerge(original, { b: { d: 'd' }, arr: [ 1 ] });
// output: { a: 1, b: { c: 'c', d: 'd' }, arr: [ 1 ] }</code></pre><h2 id="LazyService"><a class="lake-link"><i data-anchor="LazyService"></i></a>LazyService</h2><p><code><a data-toc="LazyService">LazyService</a></code> delay loading JS or CSS files.</p><pre class="hljs language-ts"><code>import { LazyService } from '@delon/util/other';

export class AppComponent {
  constructor(private lazy: LazyService) {}

  ngOnInit() {
    this.lazy.load([ \`//cdn.bootcss.com/xlsx/0.11.17/xlsx.full.min.js\` ]).then(() => {
      // do something
    });
  }
}</code></pre><h2 id="assert"><a class="lake-link"><i data-anchor="assert"></i></a>assert</h2><p>Assert whether the expression and throw an error into console in dev mode.</p><ul><li><p><code><a data-toc="assert">assert</a></code> Assert whether the expression</p></li><li><p><code>assertEmpty</code> Assert whether empty (<code>null</code> or <code>undefined</code>)</p></li><li><p><code>assertNumber</code> Assert whether <code>number</code> type</p></li><li><p><code>assertString</code> Assert whether <code>string</code> type</p></li><li><p><code>assertArray</code> Assert whether <code>array</code> type</p></li><li><p><code>assertObservable</code> Assert whether <code>Observable</code> type</p></li></ul></section>`,meta:{title:"other",subtitle:"Deep get,copy,merge,lazy,assert",type:"Tools"},toc:[{id:"omit",title:"omit",h:2},{id:"deepGet",title:"deepGet",h:2},{id:"deepCopy",title:"deepCopy",h:2},{id:"deepMerge",title:"deepMerge",h:2},{id:"LazyService",title:"LazyService",h:2},{id:"assert",title:"assert",h:2}]},"zh-CN":{content:`<section class="markdown"><h2 id="omit"><a class="lake-link"><i data-anchor="omit"></i></a>omit</h2><p>\u5FFD\u7565 <code>obj</code> \u6307\u5B9A\u5C5E\u6027\u3002</p><pre class="hljs language-ts"><code>omit({ a: 1, b: 2, c: 3 }, 'a') // { b: 2, c: 3 }
omit({ a: 1, b: 2, c: 3 }, ['a', 'c']) // { b: 2 }
omit({ a: 1, b: 2 }, key => key === 'a') // { a: 1 }</code></pre><h2 id="deepGet"><a class="lake-link"><i data-anchor="deepGet"></i></a>deepGet</h2><p>\u7C7B\u4F3C <code>_.get</code>\uFF0C\u6839\u636E <code>path</code> \u83B7\u53D6\u5B89\u5168\u503C\u3002</p><pre class="hljs language-ts"><code>const obj = {
  id: 1,
  user: {
    name: 'cipchk',
    age: 18
  }
};

deepGet(obj, 'id'); // 1
deepGet(obj, 'user.age'); // 18</code></pre><h2 id="deepCopy"><a class="lake-link"><i data-anchor="deepCopy"></i></a>deepCopy</h2><p>\u57FA\u4E8E <a target="_blank" href="https://github.com/justmoon/node-extend" data-url="https://github.com/justmoon/node-extend">extend</a> \u7684\u6DF1\u5EA6\u62F7\u8D1D\u3002</p><pre class="hljs language-ts"><code>const source = { a: 1, user: { name: 'cipchk' } };
const obj = deepCopy(source);</code></pre><h2 id="deepMerge"><a class="lake-link"><i data-anchor="deepMerge"></i></a>deepMerge</h2><p>\u6DF1\u5EA6\u5408\u5E76\u3002</p><pre class="hljs language-ts"><code>let original = { a: 1, b: { c: 'c' } };
deepMerge(original, { b: { d: 'd' }, arr: [ 1 ] });
// output: { a: 1, b: { c: 'c', d: 'd' }, arr: [ 1 ] }</code></pre><h2 id="LazyService"><a class="lake-link"><i data-anchor="LazyService"></i></a>LazyService</h2><p><code><a data-toc="LazyService">LazyService</a></code> \u7528\u4E8E\u5EF6\u8FDF\u52A0\u8F7D JS \u6216 CSS \u6587\u4EF6\uFF0C\u5BF9\u4E8E\u65E0\u987B\u88AB\u6253\u5305 script.js \u4E14\u53C8\u662F\u7B2C\u4E09\u65B9\u7C7B\u5E93\u6BD4\u8F83\u5927\u65F6\uFF0C\u975E\u5E38\u6709\u7528\uFF0C\u4E00\u4E2A\u7B80\u5355\u7684\u7528\u6CD5\uFF0C\u4F8B\u5982\uFF1A</p><pre class="hljs language-ts"><code>import { LazyService } from '@delon/util/other';

export class AppComponent {
  constructor(private lazy: LazyService) {}

  ngOnInit() {
    this.lazy.load([ \`//cdn.bootcss.com/xlsx/0.11.17/xlsx.full.min.js\` ]).then(() => {
      // do something
    });
  }
}</code></pre><h2 id="assert"><a class="lake-link"><i data-anchor="assert"></i></a>assert</h2><p>\u65AD\u8A00\u8868\u8FBE\u5F0F\u662F\u5426\u7B26\u5408\u9884\u671F\uFF0C\u5E76\u5728\u5F00\u53D1\u6A21\u5F0F\u4E0B\u4F1A\u5728\u63A7\u5236\u53F0\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002</p><ul><li><p><code><a data-toc="assert">assert</a></code> \u65AD\u8A00\u8868\u8FBE\u5F0F\u662F\u5426\u7B26\u5408\u9884\u671F</p></li><li><p><code>assertEmpty</code> \u65AD\u8A00\u662F\u5426\u7A7A\u503C\uFF08<code>null</code> \u6216 <code>undefined</code>\uFF09</p></li><li><p><code>assertNumber</code> \u65AD\u8A00\u662F\u5426 <code>number</code> \u7C7B\u578B</p></li><li><p><code>assertString</code> \u65AD\u8A00\u662F\u5426 <code>string</code> \u7C7B\u578B</p></li><li><p><code>assertArray</code> \u65AD\u8A00\u662F\u5426 <code>array</code> \u7C7B\u578B</p></li><li><p><code>assertObservable</code> \u65AD\u8A00\u662F\u5426 <code>Observable</code> \u7C7B\u578B</p></li></ul></section>`,meta:{title:"other",subtitle:"\u6DF1\u83B7\u53D6\u3001\u62F7\u8D1D\u3001\u5408\u5E76\u3001\u5EF6\u8FDF\u3001\u65AD\u8A00",type:"Tools"},toc:[{id:"omit",title:"omit",h:2},{id:"deepGet",title:"deepGet",h:2},{id:"deepCopy",title:"deepCopy",h:2},{id:"deepMerge",title:"deepMerge",h:2},{id:"LazyService",title:"LazyService",h:2},{id:"assert",title:"assert",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-other"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var T=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/pipes/currency/index.en-US.md","zh-CN":"packages/util/pipes/currency/index.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><blockquote><p>You can override to set the <code>startingUnit</code>, <code>megaUnit</code>, <code>precision</code>, <code>ingoreZeroPrecision</code> through <a href="/docs/global-config" data-url="/docs/global-config">Global Configuration</a>.</p></blockquote><h2 id="price"><a class="lake-link"><i data-anchor="price"></i></a>price</h2><p>Format a number with commas as thousands separators.</p></section><example-currency-price-index></example-currency-price-index><section class="markdown"><h2 id="mega"><a class="lake-link"><i data-anchor="mega"></i></a>mega</h2><p>Large number format filter.</p></section><example-currency-mega-index></example-currency-mega-index><section class="markdown"><h2 id="cny"><a class="lake-link"><i data-anchor="cny"></i></a>cny</h2><p>Converted into RMB notation.</p></section><example-currency-cny-index></example-currency-cny-index><section class="markdown"></section>',meta:{title:"currency",subtitle:"Currency Pipes",type:"Pipes",module:"import { CurrencyPipeModule } from '@delon/util/pipes/currency';",standalone:!0},toc:[{id:"price",title:"price",h:2},{id:"mega",title:"mega",h:2},{id:"cny",title:"cny",h:2}]},"zh-CN":{content:'<section class="markdown"><blockquote><p>\u53EF\u4EE5\u901A\u8FC7<a href="/docs/global-config" data-url="/docs/global-config">\u5168\u5C40\u914D\u7F6E</a>\u8986\u76D6 <code>startingUnit</code>\u3001<code>megaUnit</code>\u3001<code>precision</code>\u3001<code>ingoreZeroPrecision</code> \u7B49\u53C2\u6570\u3002</p></blockquote><h2 id="price"><a class="lake-link"><i data-anchor="price"></i></a>price</h2><p>\u7528\u9017\u53F7\u5C06\u6570\u5B57\u683C\u5F0F\u5316\u4E3A\u5343\u4F4D\u5206\u9694\u7B26\u3002</p></section><example-currency-price-index></example-currency-price-index><section class="markdown"><h2 id="mega"><a class="lake-link"><i data-anchor="mega"></i></a>mega</h2><p>\u5927\u6570\u636E\u683C\u5F0F\u5316\u3002</p></section><example-currency-mega-index></example-currency-mega-index><section class="markdown"><h2 id="cny"><a class="lake-link"><i data-anchor="cny"></i></a>cny</h2><p>\u8F6C\u5316\u6210\u4EBA\u6C11\u5E01\u8868\u793A\u6CD5\u3002</p></section><example-currency-cny-index></example-currency-cny-index><section class="markdown"></section>',meta:{title:"currency",subtitle:"\u8D27\u5E01\u7BA1\u9053",type:"Pipes",module:"import { CurrencyPipeModule } from '@delon/util/pipes/currency';",standalone:!0},toc:[{id:"price",title:"price",h:2},{id:"mega",title:"mega",h:2},{id:"cny",title:"cny",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-pipes-currency"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var S=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/pipes/filter/index.en-US.md","zh-CN":"packages/util/pipes/filter/index.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="filter"><a class="lake-link"><i data-anchor="filter"></i></a>filter</h2><p>Filter array.</p></section><example-filter-index></example-filter-index><section class="markdown"></section>',meta:{title:"filter",subtitle:"Filter",type:"Pipes",module:"import { FilterPipeModule } from '@delon/util/pipes/filter';",standalone:!0},toc:[{id:"filter",title:"filter",h:2}]},"zh-CN":{content:'<section class="markdown"><h2 id="filter"><a class="lake-link"><i data-anchor="filter"></i></a>filter</h2><p>\u8FC7\u6EE4\u6570\u7EC4\u3002</p></section><example-filter-index></example-filter-index><section class="markdown"></section>',meta:{title:"filter",subtitle:"\u8FC7\u6EE4\u6570\u7EC4",type:"Pipes",module:"import { FilterPipeModule } from '@delon/util/pipes/filter';",standalone:!0},toc:[{id:"filter",title:"filter",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-pipes-filter"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var D=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/pipes/format/index.en-US.md","zh-CN":"packages/util/pipes/format/index.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="mask"><a class="lake-link"><i data-anchor="mask"></i></a>mask</h2><p>Format mask.</p></section><example-format-mask-index></example-format-mask-index><section class="markdown"></section>',meta:{title:"format",subtitle:"Mask",type:"Pipes",module:"import { FormatPipeModule } from '@delon/util/pipes/format';",standalone:!0},toc:[{id:"mask",title:"mask",h:2}]},"zh-CN":{content:'<section class="markdown"><h2 id="mask"><a class="lake-link"><i data-anchor="mask"></i></a>mask</h2><p>\u683C\u5F0F\u5316\u63A9\u7801\u3002</p></section><example-format-mask-index></example-format-mask-index><section class="markdown"></section>',meta:{title:"format",subtitle:"\u63A9\u7801",type:"Pipes",module:"import { FormatPipeModule } from '@delon/util/pipes/format';",standalone:!0},toc:[{id:"mask",title:"mask",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-pipes-format"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var M=(()=>{let e=class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/util/token/index.en-US.md","zh-CN":"packages/util/token/index.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="WINDOW"><a class="lake-link"><i data-anchor="WINDOW"></i></a>WINDOW</h2><p>Access to global <code>window</code> object.</p><h2 id="PAGE_VISIBILITY"><a class="lake-link"><i data-anchor="PAGE_VISIBILITY"></i></a>PAGE_VISIBILITY</h2><p>Use the <code>visibilitychange</code> event to monitor whether the browser tab is visible, which is generally used when the user leaves the browser tab to temp interrupt the backend to continue sending requests.</p></section>',meta:{title:"token",subtitle:"Token",type:"Tools"},toc:[{id:"WINDOW",title:"WINDOW",h:2},{id:"PAGE_VISIBILITY",title:"PAGE_VISIBILITY",h:2}]},"zh-CN":{content:'<section class="markdown"><h2 id="WINDOW"><a class="lake-link"><i data-anchor="WINDOW"></i></a>WINDOW</h2><p>\u8BBF\u95EE\u5168\u5C40 <code>window</code> \u5BF9\u8C61\u3002</p><h2 id="PAGE_VISIBILITY"><a class="lake-link"><i data-anchor="PAGE_VISIBILITY"></i></a>PAGE_VISIBILITY</h2><p>\u901A\u8FC7 <code>visibilitychange</code> \u4E8B\u4EF6\u6765\u76D1\u542C\u6D4F\u89C8\u5668\u9009\u9879\u5361\u662F\u5426\u53EF\u89C1\uFF0C\u4E00\u822C\u7528\u4E8E\u5F53\u7528\u6237\u79BB\u5F00\u5E94\u7528\u65F6\u6682\u65F6\u4E2D\u65AD\u540E\u7AEF\u6301\u7EED\u53D1\u9001\u8BF7\u6C42\u65F6\u3002</p></section>',meta:{title:"token",subtitle:"Token",type:"Tools"},toc:[{id:"WINDOW",title:"WINDOW",h:2},{id:"PAGE_VISIBILITY",title:"PAGE_VISIBILITY",h:2}]}},demo:!1},this.codes=[]}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["app-util-token"]],hostVars:2,hostBindings:function(t,a){t&2&&n("d-block","true")},standalone:!0,features:[s],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(t,a){t&1&&r(0,"app-docs",0),t&2&&c("codes",a.codes)("item",a.item)},dependencies:[l],encapsulation:2});let o=e;return o})();var Me=[{path:"",component:h,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:m},{path:"array",redirectTo:"array/zh",pathMatch:"full"},{path:"array/:lang",component:u},{path:"browser",redirectTo:"browser/zh",pathMatch:"full"},{path:"browser/:lang",component:f},{path:"date-time",redirectTo:"date-time/zh",pathMatch:"full"},{path:"date-time/:lang",component:g},{path:"decorator",redirectTo:"decorator/zh",pathMatch:"full"},{path:"decorator/:lang",component:k},{path:"form",redirectTo:"form/zh",pathMatch:"full"},{path:"form/:lang",component:y},{path:"format",redirectTo:"format/zh",pathMatch:"full"},{path:"format/:lang",component:b},{path:"math",redirectTo:"math/zh",pathMatch:"full"},{path:"math/:lang",component:C},{path:"other",redirectTo:"other/zh",pathMatch:"full"},{path:"other/:lang",component:v},{path:"pipes-currency",redirectTo:"pipes-currency/zh",pathMatch:"full"},{path:"pipes-currency/:lang",component:T},{path:"pipes-filter",redirectTo:"pipes-filter/zh",pathMatch:"full"},{path:"pipes-filter/:lang",component:S},{path:"pipes-format",redirectTo:"pipes-format/zh",pathMatch:"full"},{path:"pipes-format/:lang",component:D},{path:"token",redirectTo:"token/zh",pathMatch:"full"},{path:"token/:lang",component:M}]}];export{Me as routes};
